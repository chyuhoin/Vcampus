Index: src/com/vcampus/server/controller/LessonController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.pojo.Teacher;\r\nimport com.vcampus.server.service.Service;\r\nimport com.vcampus.server.service.LessonService;\r\nimport com.google.gson.*;\r\nimport com.vcampus.server.service.StudentService;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class LessonController implements Controller{\r\n    @Override\r\n    public Message check(Message msg){\r\n        LessonService service = new LessonService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\":\r\n                //添加课程信息\r\n                //输入：课程ID、课程名称、学院、专业、是否有考试\r\n                //此时创建一个其他数据为空的“空课程”\r\n                //只有数据库中没有对应的课程ID才可以创建空课程\r\n                Lesson lesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addLesson(lesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"postone\":\r\n                //添加对应课程的老师\r\n                //输入课程所需的所有数据，创建（内部编号为课程ID+教师ID）\r\n                //如果没有对应课程ID，报错\r\n                //如果有对应课程ID且为“空课程”,视为修改空课程\r\n                //如果有对应课程ID且无空课程，则创建课程\r\n                //如果有对应内部ID，则视为修改\r\n                //在老师的课表里添加信息\r\n                Lesson lessonone = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addOneLesson(lessonone)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case\"addlesson\":\r\n                //添加课程\r\n                //如果存在对应的内部ID则报错\r\n                //如果有老师ID则在老师的课表里添加信息\r\n                Lesson addlesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addLessonnew(addlesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"setlesson\":\r\n                //修改课程\r\n                //如果不存在对应内部ID则报错\r\n                //如果老师ID修改了则进行相应处理\r\n                Lesson setlesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.setLessonnew(setlesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showtable\":\r\n                //输入学生ID，显示其课表\r\n                String studentID2 = msg.getData();\r\n                String res1=service.showTable(studentID2);\r\n                return new Message(\"200\", \"{res: '\"+res1+\"'}\");\r\n            case \"showtablename\":\r\n                //输入学生ID，显示其课表\r\n                //此时把课程的内部ID改为课的名字\r\n                String studentID3 = msg.getData();\r\n                String res2=service.showTable(studentID3);\r\n                String res3=service.showTableName(res2);\r\n                return new Message(\"200\", \"{res: '\"+res3+\"'}\");\r\n            case \"showroom\":\r\n                //输入时间，显示可用教室\r\n                Lesson lesson2 = gson.fromJson(msg.getData(), Lesson.class);\r\n                String time = msg.getData();//课程ID\r\n                HashMap<String, Object> map9 = new HashMap<>();\r\n//                map9.put(\"res\", service.showRoom(time));\r\n                map9.put(\"res\", service.showRoom(lesson2.getTime()));\r\n                return new Message(\"200\", gson.toJson(map9));\r\n            case \"showallteacher\":\r\n                //输入课程号，显示所有老师\r\n                String lessonID1 = msg.getData();//课程ID\r\n                HashMap<String, Object> map12 = new HashMap<>();\r\n                map12.put(\"res\", service.showAllTeacher(lessonID1));\r\n                return new Message(\"200\", gson.toJson(map12));\r\n            case \"addroom\":\r\n                //给课程添加教室\r\n                //输入教室ID，内部ID，给课程添加教室\r\n                //用\",\"隔开\r\n                String oldStr5 = msg.getData();\r\n                String[] strs5 = oldStr5.split(\",\");//根据，切分字符串\r\n                if(service.addRoom(strs5[0],strs5[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showteacher\":\r\n                //添加对应课程的老师时显示所有可选的老师\r\n                //只要专业满足即可选择\r\n                HashMap<String, Object> map1 = new HashMap<>();\r\n                map1.put(\"res\", service.viewTeachers(msg.getData()));\r\n                return new Message(\"200\", gson.toJson(map1));\r\n            case \"showteachertime\":\r\n                //显示所有可选的老师\r\n                //输入时间，专业，用\",\"隔开\r\n                Lesson lesson1 = gson.fromJson(msg.getData(), Lesson.class);\r\n                String oldStr6 = msg.getData();\r\n                String[] strs6 = oldStr6.split(\",\");//根据，切分字符串\r\n                HashMap<String, Object> map10 = new HashMap<>();\r\n                map10.put(\"res\", service.viewTeachersTime(lesson1.getTime(),lesson1.getMajor()));\r\n                //map10.put(\"res\", service.viewTeachersTime(strs6[0],strs6[1]));\r\n                return new Message(\"200\", gson.toJson(map10));\r\n            case\"showtime\":\r\n                //输入老师ID，返回所有不可选的时间\r\n                //不可选的时间有：非偏好时间、上课时间\r\n                String teacherID = msg.getData();//课程ID\r\n                String res=service.showTecherTime(teacherID);\r\n                return new Message(\"200\", \"{res: '\"+res+\"'}\");\r\n            case \"delete\":\r\n                //删除课程\r\n                //输入课程ID\r\n                //删除对应课程ID的所有课程,删除对应的考试信息,删除对应学生的课表信息，删除老师的课表信息\r\n                //具体实现：利用课程ID查到内部ID\r\n                //转到内部ID的处理\r\n                Lesson lesson3 = gson.fromJson(msg.getData(), Lesson.class);\r\n//                String deleteID = msg.getData();//课程ID\r\n                if (service.delete(lesson3.getLessonID())) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"deleteone\":\r\n                //删除对应老师教授的特定课程\r\n                //删除对应老师的考试信息\r\n                //输入内部ID\r\n                //具体实现：利用内部ID查到老师ID与学生ID\r\n                //执行老师退课函数（输入老师ID与内部ID，在老师课表中删除对应课的信息）\r\n                //执行学生退课函数（输入学生ID与内部ID，在学生和课的表中删除信息，在学生课表中删除信息）\r\n                //执行删除考试函数（输入内部ID，删除对应考试信息）\r\n                //执行教室退课函数\r\n                //执行删除课程函数（输入内部ID，在课的表里删除信息）\r\n                Lesson lesson4 = gson.fromJson(msg.getData(), Lesson.class);\r\n//                String deleteoneID = msg.getData();//内部编号\r\n                if (service.deleteone(lesson4.getInnerID())) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"get\":\r\n                //显示所有课程\r\n                HashMap<String, Object> map2 = new HashMap<>();\r\n                map2.put(\"res\", service.viewAllLessons());\r\n                return new Message(\"200\", gson.toJson(map2));\r\n            case \"getone\":\r\n                //显示某一指标的课程 如“专业:计算机” “指标”+“:”+“数据”\r\n                String data = msg.getData();\r\n                Map<String, String> map = gson.fromJson(data, new TypeToken<HashMap<String, String>>() {}.getType());\r\n                HashMap<String, Object> map3 = new HashMap<>();\r\n                Set<Lesson> lessonSet = new HashSet<>();\r\n                for (Map.Entry<String, String> entry : map.entrySet()) {\r\n                    lessonSet.addAll(service.viewSpecificLessons(entry.getKey(), entry.getValue()));\r\n                }\r\n                map3.put(\"res\", lessonSet);\r\n                return new Message(\"200\", gson.toJson(map3));\r\n            case\"getstudent\":\r\n                //显示对应学生选的课 输入学生ID\r\n                String studentID = msg.getData();\r\n\r\n                HashMap<String, Object> map4 = new HashMap<>();\r\n                map4.put(\"res\", service.searchMine(studentID));\r\n                return new Message(\"200\", gson.toJson(map4));\r\n            case \"getteacher\":\r\n                //显示选择对应课程的学生 输入课程ID\r\n                Lesson lesson5 = gson.fromJson(msg.getData(), Lesson.class);\r\n//                String lessonID = msg.getData();\r\n                HashMap<String, Object> map5 = new HashMap<>();\r\n//                map5.put(\"res\", service.getTeacher(lessonID));\r\n                map5.put(\"res\", service.getTeacher(lesson5.getLessonID()));\r\n                return new Message(\"200\", gson.toJson(map5));\r\n            case \"getspecificteacher\":\r\n                //显示选择对应课程的学生 输入内部ID\r\n                Lesson lesson6 = gson.fromJson(msg.getData(), Lesson.class);\r\n//                String innerID = msg.getData();\r\n                HashMap<String, Object> map6 = new HashMap<>();\r\n//                map6.put(\"res\", service.getSpecificTeacher(innerID));\r\n                map6.put(\"res\", service.getSpecificTeacher(lesson6.getInnerID()));\r\n                return new Message(\"200\", gson.toJson(map6));\r\n            case \"showstatusstudent\":\r\n                //输入ID，显示内容：*学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               老师：姓名、身份、ID、可选专业、偏好时间\r\n                //返回一个学生的类的list\r\n                String studentID1 = msg.getData();\r\n                HashMap<String, Object> map7 = new HashMap<>();\r\n                map7.put(\"res\", service.searchStudent(studentID1));\r\n                return new Message(\"200\", gson.toJson(map7));\r\n\r\n            case \"showstatussteacher\":\r\n                //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               *老师：姓名、身份、ID、可选专业、偏好时间\r\n                //返回一个老师的类的list\r\n                String teacherID1 = msg.getData();\r\n                HashMap<String, Object> map8 = new HashMap<>();\r\n                map8.put(\"res\", service.searchTeacher(teacherID1));\r\n                return new Message(\"200\", gson.toJson(map8));\r\n            case \"setteacher\":\r\n                //修改老师的可选专业与偏好时间\r\n                //输入一个老师的类\r\n                //如果没有则视为添加\r\n                //如果有则视为修改\r\n                Teacher teacher = gson.fromJson(msg.getData(), Teacher.class);\r\n                if (service.addTeacher(teacher)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"arrange\":\r\n                //自动排课\r\n                //只排未安排的课程\r\n                if (service.Arrange()) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"arrangeall\":\r\n                //自动排课所有课程\r\n                if (service.ArrangeAll()) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"addgrade\":\r\n                //添加成绩\r\n                //输入学生ID，内部ID，成绩，用“,”隔开\r\n                String oldStr1 = msg.getData();\r\n                String[] strs1 = oldStr1.split(\",\");//根据，切分字符串\r\n                if(service.addGrade(strs1[0],strs1[1],Integer.parseInt(strs1[2])))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showgradestudent\":\r\n                //显示成绩\r\n                //输入学生ID，显示其所有成绩\r\n                String studentID4 = msg.getData();\r\n                HashMap<String, Object> map11 = new HashMap<>();\r\n                map11.put(\"res\", service.getGrade(studentID4));\r\n                return new Message(\"200\", gson.toJson(map11));\r\n            case \"showlesson\":\r\n                //显示课程的状态：可选、已选、已满、时间冲突\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr2 = msg.getData();\r\n                String[] strs2 = oldStr2.split(\",\");//根据，切分字符串\r\n                String data1=service.judgeLesson(strs2[0],strs2[1]);\r\n                return new Message(\"200\", \"{res: \"+\"'\"+data1+\"'}\");\r\n            case \"selectlesson\":\r\n                //学生选课\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr3 = msg.getData();\r\n                String[] strs3 = oldStr3.split(\",\");//根据，切分字符串\r\n                if(service.selectLesson(strs3[0],strs3[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"returnlesson\":\r\n                //学生退课\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr4 = msg.getData();\r\n                String[] strs4 = oldStr4.split(\",\");//根据，切分字符串\r\n                if(service.returnLesson(strs4[0],strs4[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/LessonController.java b/src/com/vcampus/server/controller/LessonController.java
--- a/src/com/vcampus/server/controller/LessonController.java	(revision 248dcae14e58ece431083b6190696d5e7833f4bd)
+++ b/src/com/vcampus/server/controller/LessonController.java	(date 1661685781316)
@@ -225,6 +225,13 @@
                 HashMap<String, Object> map11 = new HashMap<>();
                 map11.put("res", service.getGrade(studentID4));
                 return new Message("200", gson.toJson(map11));
+            case "getgrade":
+                //输入内部ID
+                //返回一个String的成绩
+                Lesson lesson7 = gson.fromJson(msg.getData(), Lesson.class);
+                HashMap<String, Object> map13 = new HashMap<>();
+                map13.put("res", service.getGradeStudent(lesson7.getInnerID()));
+                return new Message("200", gson.toJson(map13));
             case "showlesson":
                 //显示课程的状态：可选、已选、已满、时间冲突
                 //输入学生ID与课程号 用","隔开
Index: src/com/vcampus/server/service/LessonService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.service;\r\n\r\nimport com.vcampus.dao.*;\r\nimport com.vcampus.dao.utils.ClassTable;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.LessonGrade;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.pojo.Teacher;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static java.util.stream.Collectors.toList;\r\n\r\npublic class LessonService implements Service{\r\n    public boolean addLesson(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(!LessonDao.search(\"lessonID\",user.getLessonID()).isEmpty())//已经有这个课程ID\r\n                res=false;\r\n            else res=LessonDao.addLesson(user);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addOneLesson(Lesson user) {\r\n        boolean res;\r\n        List<Lesson> lessons = null;\r\n        try {\r\n            lessons = LessonDao.search(\"lessonID\", user.getLessonID());\r\n            if (lessons.isEmpty())//没有对应课程ID\r\n                res = false;\r\n            else if (lessons.get(0).getInnerID().equals(lessons.get(0).getLessonID()))//此时为空课程\r\n                if (LessonDao.deleteSpecificLesson(user.getLessonID()))\r\n                {//删除成功\r\n                    res = LessonDao.addLesson(user);\r\n                    if(!res){//添加失败，恢复\r\n                        LessonDao.addLesson(lessons.get(0));\r\n                    }\r\n                    else{//添加课程成功，现在添加老师的课表\r\n                        res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        if(!res){//添加老师课表失败，现在恢复\r\n                            LessonDao.deleteLesson(user.getInnerID());\r\n                            LessonDao.addLesson(lessons.get(0));\r\n                        }\r\n                        else{//添加老师课表成功，现在添加教室\r\n                            res=LessonDao.selectLessonForClassroom(user.getTime(),user.getInnerID(),user.getClassroom());\r\n                            if(!res){//添加老师课表失败，现在恢复\r\n                                LessonDao.deleteLesson(user.getInnerID());\r\n                                TeacherDao.returnLesson(user.getTeacherID(),user.getInnerID());\r\n                                LessonDao.addLesson(lessons.get(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {//删除失败\r\n                    res = false;\r\n                }\r\n            else{//此时已经没有空课程\r\n                lessons=LessonDao.search(\"innerID\", user.getInnerID());\r\n                if (lessons.isEmpty())//此时为添加课程\r\n                    if(LessonDao.addLesson(user)){//添加成功\r\n                        res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        if(!res){\r\n                            //添加老师课表失败，恢复\r\n                            LessonDao.deleteLesson(user.getInnerID());\r\n                        }\r\n                        else{\r\n                            //添加老师课表成功，现在开始添加教室课表\r\n                            res=LessonDao.selectLessonForClassroom(user.getTime(),user.getInnerID(),user.getClassroom());\r\n                            if(!res){\r\n                                //添加教室课表失败，恢复\r\n                                LessonDao.deleteLesson(user.getInnerID());\r\n                                TeacherDao.returnLesson(user.getTeacherID(),user.getInnerID());\r\n                            }\r\n                        }\r\n                    }\r\n                else res=false;\r\n                else{//此时为修改课程\r\n                    res=setLessonnew(user);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addLessonnew(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(!LessonDao.search(\"innerID\",user.getInnerID()).isEmpty()){//已经有这个内部ID\r\n//                System.out.println(\"已经有这个内部ID\");\r\n                res=false;\r\n            }\r\n            else {\r\n                user.setLength(setLength(user.getTime()));//设定学时\r\n                res=LessonDao.addLesson(user);\r\n                if(!res){\r\n                    System.out.println(\"添加失败\");\r\n                    return false;\r\n                    }\r\n                if(user.getTeacherID() != null&&user.getStatus()!=0){\r\n                    //添加课程时也添加了老师且此时为有效课\r\n                    //因此要添加老师的课表\r\n                    System.out.println(\"添加老师课表\");\r\n                    res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                    if(!res){\r\n                        //添加失败，恢复\r\n                        System.out.println(\"添加老师课表,失败\");\r\n                        LessonDao.deleteLesson(user.getInnerID());\r\n                        return false;\r\n                    }\r\n                }\r\n                if(user.getClassroom()!= null&&user.getStatus()!=0){\r\n                    //添加课程时也添加了教室且此时为有效课\r\n                    //因此要添加教室的课表\r\n                    res=LessonDao.selectLessonForClassroom(user.getTime(),user.getInnerID(),user.getClassroom());\r\n                    if(!res){\r\n                        //添加失败，恢复\r\n                        LessonDao.deleteLesson(user.getInnerID());\r\n                        TeacherDao.deleteTeacher(user.getTeacherID());\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteTest(String innerID) {\r\n        //删除课程\r\n        //如果为有效课且有老师信息，删除老师课表\r\n        //如果为有效课且有教室信息，删除教室信息\r\n        boolean res;\r\n        List<Lesson>lessons=null;\r\n        try {\r\n            lessons=(LessonDao.search(\"innerID\",innerID));\r\n            Lesson user=lessons.get(0);\r\n            if(LessonDao.search(\"innerID\",user.getInnerID()).isEmpty())//没有这个内部ID\r\n                res=false;\r\n            else {\r\n                res=LessonDao.deleteLesson(user.getInnerID());\r\n                if(!res)return false;\r\n                if(user.getTeacherID() != null&&user.getStatus()!=0){\r\n                    //课程有老师且此时为有效课\r\n                    //因此要删除老师的课表\r\n                    res=TeacherDao.returnLesson(user.getTeacherID(),user.getInnerID());\r\n                    if(!res){\r\n                        //删除失败，恢复\r\n                        LessonDao.addLesson(user);\r\n                        return false;\r\n                    }\r\n                }\r\n                if(user.getClassroom()!= null&&user.getStatus()!=0){\r\n                    //添加课程时也添加了教室且此时为有效课\r\n                    //因此要添加教室的课表\r\n                    res=LessonDao.returnLessonForClassroom(user.getInnerID(),user.getClassroom());\r\n                    if(!res){\r\n                        //删除失败，恢复\r\n                        if(user.getTeacherID() != null&&user.getStatus()!=0){\r\n                            TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        }\r\n                        LessonDao.addLesson(user);\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean setLessonnew(Lesson user) {\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson>lessons=LessonDao.search(\"innerID\",user.getInnerID());\r\n//            System.out.println(lessons);\r\n            if(lessons.isEmpty())//没有这个内部ID\r\n                res=false;\r\n            else {\r\n                if(deleteTest(user.getInnerID())){\r\n                    user.setLength(setLength(user.getTime()));//设定学时\r\n//                    System.out.println(setLength(user.getTime()));\r\n                    res=addLessonnew(user);\r\n                    if(!res){\r\n                        //添加失败，恢复\r\n                        addLessonnew(lessons.get(0));\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<String> showRoom(String time) {\r\n        List<String> room=null;\r\n        try {\r\n            room=LessonDao.abledRoom(time);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return room;\r\n    }\r\n    public List<Teacher> showAllTeacher(String lessonID) {\r\n        List<Teacher> teachers=new ArrayList<>();\r\n        try {\r\n            List<Lesson>lessons=LessonDao.search(\"lessonID\",lessonID);\r\n            for(Lesson lesson:lessons){\r\n                List<Teacher>tmp=TeacherDao.searchTeacher(\"teacherID\",lesson.getTeacherID());\r\n                for(Teacher temp:tmp){\r\n                    teachers.add(temp);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return teachers;\r\n    }\r\n    public List<Teacher> viewTeachers(String abledMajor) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            res = TeacherDao.searchTeacher(\"abledMajor\",abledMajor);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Teacher> viewTeachersTime(String time,String abledMajor) {\r\n        List<Teacher> res = new ArrayList<>();\r\n        try {\r\n            List<Teacher> tmp = TeacherDao.searchTeacher(\"abledMajor\",abledMajor);\r\n            for(Teacher teacher:tmp){\r\n                boolean isadd=true;\r\n                String teacherID=teacher.getTeacherID();\r\n                String teachertable=TeacherDao.getLessonTable(teacherID);//取得老师课表\r\n                String[] temp = teachertable.split(\",\");//根据，切分字符串\r\n                List<Integer>times=ClassTable.getTimeIndex(time);\r\n                List<Integer>teacherunlikes=ClassTable.getTimeIndex(teacher.getTime());\r\n                //老师不喜欢的时间\r\n                for(Integer tmptime:times ){\r\n                    for(Integer teacherunlike:teacherunlikes){\r\n                        if(tmptime==teacherunlike){\r\n                            isadd=false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(!temp[tmptime].equals(\"0\")){\r\n                    //如果此时老师课表有课或为非偏好时间\r\n                        isadd=false;\r\n                        break;\r\n                    }\r\n                }\r\n                if(isadd)res.add(teacher);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public String showTable(String studentID) {\r\n        String time=null;\r\n        try {\r\n            time = LessonDao.getLessonTable(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return time;\r\n    }\r\n    public String showTableName(String time) {\r\n        String timename=null;\r\n        try {\r\n            List<Lesson>lesson=null;\r\n            String[] tmp = time.split(\",\");//根据，切分字符串\r\n            for(int i=0;i<65;i++){\r\n                if(!tmp[i].equals(\"0\")){\r\n                    //此时有课程，将内部ID变为课程名字\r\n                    lesson=LessonDao.search(\"innerID\",tmp[i]);\r\n                    tmp[i]=lesson.get(0).getName();\r\n                    tmp[i]=lesson.get(0).getName();\r\n                }\r\n            }\r\n            timename = String.join(\",\",tmp);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return timename;\r\n    }\r\n    public String showTecherTime(String teacherID) {\r\n        String time=null;\r\n        try {\r\n            String res = TeacherDao.getLessonTable(teacherID);\r\n            String[] tmp = res.split(\",\");//根据，切分字符串\r\n            List<Teacher>teacher=TeacherDao.searchTeacher(\"teacherID\",teacherID);\r\n            if(teacher.isEmpty())return null;\r\n            List<Integer>Liketime= ClassTable.getTimeIndex(teacher.get(0).getTime());\r\n            for(Integer liketime:Liketime){\r\n                if(tmp[liketime].equals(\"0\"))//如果非偏好时间没有选课，则将其变为1\r\n                    tmp[liketime]=\"1\";\r\n            }\r\n            time = String.join(\",\",tmp);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return time;\r\n    }\r\n    public List<Lesson> viewAllLessons() {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> viewSpecificLessons(String field,Object value) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search(field, value);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addRoom(String roomID, String innerID) {\r\n        boolean res;\r\n        try {\r\n            List<Lesson>lesson=LessonDao.search(\"innerID\",innerID);\r\n            if(lesson.isEmpty())return false;\r\n            res=LessonDao.selectLessonForClassroom(lesson.get(0).getTime(),innerID,roomID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addGrade(String studentID, String innerID, Integer grade) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.addGrade(studentID, innerID, grade);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<LessonGrade> getGrade(String studentID) {\r\n        List<LessonGrade> res = null;\r\n        try {\r\n            res = LessonDao.getGrade(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public boolean delete(String deleteID) {\r\n        boolean res=false;\r\n        List<Lesson> lessons=null;\r\n        try {\r\n            lessons=LessonDao.search(\"lessonID\",deleteID);\r\n            if(lessons.isEmpty())//没有这门课\r\n                res=false;\r\n            else for(Lesson lesson:lessons){\r\n                res= deleteone(lesson.getInnerID());\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteone(String deleteoneID) {\r\n        boolean res;\r\n        List<Lesson> lessons=null;\r\n        try {\r\n            lessons=LessonDao.search(\"innerID\",deleteoneID);\r\n            if(lessons.isEmpty())//没有这门课\r\n                res=false;\r\n            else{\r\n                //先执行老师退课函数\r\n                res=TeacherDao.returnLesson(lessons.get(0).getTeacherID(),lessons.get(0).getInnerID());\r\n                if(!res)return res;\r\n                //再执行学生退课函数\r\n                List<String> data = null;\r\n                data=LessonDao.searchStudent(deleteoneID);\r\n                for(String student:data){\r\n                    res= LessonDao.returnLesson(student,deleteoneID);\r\n                    if(!res)return res;\r\n                }\r\n                //再执行删除考试函数\r\n                res=ExamDao.deleteExam(deleteoneID);\r\n                if(!res)return res;\r\n                //再执行教室退课函数\r\n                res=LessonDao.deleteAllFromClassroom(deleteoneID);\r\n                if(!res)return res;\r\n                //再执行删除课程函数\r\n                res=LessonDao.deleteLesson(deleteoneID);\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> searchMine(String studentID) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.searchMine(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> getTeacher(String lessonID) {\r\n        List<Student> res = new ArrayList<>();\r\n        List<Lesson>data=null;\r\n        List<Student> tmp = null;\r\n        try {\r\n            data=LessonDao.search(\"lessonID\",lessonID);\r\n            for(Lesson lesson:data){\r\n                tmp=getSpecificTeacher(lesson.getInnerID());\r\n                for(Student student:tmp){\r\n                    res.add(student);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> getSpecificTeacher(String innerID) {\r\n        List<Student> res = new ArrayList<>();\r\n        List<String>data=null;\r\n        List<Student> tmp = null;\r\n        try {\r\n            data=LessonDao.searchStudent(innerID);\r\n            for(String student:data){\r\n                tmp=StudentDao.search(\"studentID\",student);\r\n                if(!tmp.isEmpty())res.add(tmp.get(0));\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> searchStudent(String studentID) {\r\n        List<Student> res = null;\r\n        try {\r\n            res=StudentDao.search(\"studentID\", studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Teacher> searchTeacher(String teacherID) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            res=TeacherDao.searchTeacher(\"teacherID\", teacherID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public String judgeLesson(String studentID,String innerID) {\r\n        String res;\r\n        try {\r\n            switch(LessonDao.judgeLesson(studentID,innerID)){\r\n                case 0:\r\n                    res= \"Selected\";//已选\r\n                    break;\r\n                case 1:\r\n                    res=\"full\";//已满\r\n                    break;\r\n                case 2:\r\n                    res=\"conflict\";//冲突\r\n                    break;\r\n                case 3:\r\n                    res=\"Optional\";//可选\r\n                    break;\r\n                default:\r\n                    res=\"NO\";//错误\r\n                    break;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return \"NO\";\r\n        }\r\n        return res;\r\n    }\r\n    public boolean returnLesson(String studentID,String innerID) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.returnLesson(studentID, innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean selectLesson(String studentID,String innerID) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.selectLesson(studentID, innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addTeacher(Teacher user) {\r\n        boolean res;\r\n        List<Teacher> teachers = null;\r\n        try {\r\n            teachers = TeacherDao.searchTeacher(\"teacherID\", user.getTeacherID());\r\n            if(!UserDao.search(user.getTeacherID())) {\r\n                //用户管理没有这个ID\r\n                res = false;\r\n            }\r\n            else if(teachers.isEmpty()) {\r\n                //没有对应数据\r\n                //视为添加\r\n                res = TeacherDao.addTeacher(user);\r\n                if(true)return true;\r\n            }\r\n            else if(!TeacherDao.deleteTeacher(user.getTeacherID())) {//视为修改\r\n                //删除信息失败\r\n                res = false;\r\n            }\r\n            else {\r\n                //删除信息成功\r\n                res = TeacherDao.addTeacher(user);\r\n                if(!res) TeacherDao.addTeacher(teachers.get(0));//添加失败，恢复\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean Arrange() {\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson>tmp=LessonDao.search(\"status\",0);\r\n            List<Lesson>lessons=new ArrayList<>();\r\n            for(Lesson data:tmp){\r\n                if(!data.getInnerID().equals(data.getLessonID())){//此时不为空课程\r\n                    lessons.add(data);\r\n                }\r\n            }\r\n            if(doArrange(lessons)>0){\r\n                for(Lesson lesson:lessons){\r\n                    res=valueLesson(lesson.getInnerID());\r\n                    if(!res)return false;\r\n                }\r\n                res=true;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean ArrangeAll() {\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson>tmp=LessonDao.search(\"status\",1);\r\n            for(Lesson data:tmp){\r\n                res=unvalueLesson(data.getInnerID());\r\n                if(!res)return false;\r\n            }\r\n            tmp=LessonDao.search(\"status\",0);\r\n            List<Lesson>lessons=null;\r\n            for(Lesson data:tmp){\r\n                if(!data.getInnerID().equals(data.getLessonID())){//此时不为空课程\r\n                    lessons.add(data);\r\n                }\r\n            }\r\n            if(doArrange(lessons)>0){\r\n                for(Lesson lesson:lessons){\r\n                    res=valueLesson(lesson.getInnerID());\r\n                    if(!res)return false;\r\n                }\r\n                res=true;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean valueLesson(String innerID) {\r\n        //把对应课程的状态从0变为1\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson> lessons=LessonDao.search(\"innerID\",innerID);\r\n            lessons.get(0).setStatus(1);\r\n            res=setLessonnew(lessons.get(0));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean unvalueLesson(String innerID) {\r\n        //把对应课程的状态从1变为0\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson> lessons=LessonDao.search(\"innerID\",innerID);\r\n            lessons.get(0).setStatus(0);\r\n            res=setLessonnew(lessons.get(0));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public Integer doArrange(List<Lesson>lessons) {\r\n        //实现逻辑：采用近似算法\r\n        //lessons为要进行排课的课程集合，先从中取出一个进行处理，其余继续采用这个函数计算总分\r\n        //先用findTime函数给出所有可能的时间排列，再利用scoreTime给出这个时间的分数\r\n        //在此课程视为这个时间的基础上进行其他课程的计算，最后取最高分情况\r\n\r\n        Integer max=0;\r\n        Integer position=0;\r\n        Integer tmp=0;\r\n        try {\r\n            Lesson lesson=lessons.get(0);\r\n            lessons.remove(0);\r\n            List<List<Integer>>times=findTime(lesson.getInnerID());\r\n            Integer i=-1;\r\n            for(List<Integer>time:times){\r\n                i++;\r\n                String roomID=LessonDao.abledRoom(returnTime(time)).get(0);\r\n                Lesson user=new Lesson(lesson.getLessonID(),lesson.getName(),lesson.getTeacherID(),lesson.getMaxSize(),lesson.getLeftSize(),returnTime(time),lesson.getSchool(),lesson.getMajor(),lesson.getIsExam(),roomID,lesson.getLength(),1);\r\n                setLessonnew(user);\r\n                tmp=scoreTime(time,lesson.getInnerID())+doArrange(lessons);\r\n                if(tmp>max){\r\n                    max=tmp;\r\n                    position=i;\r\n                }\r\n            }\r\n            String roomID=LessonDao.abledRoom(returnTime(times.get(position))).get(0);\r\n            Lesson user=new Lesson(lesson.getLessonID(),lesson.getName(),lesson.getTeacherID(),lesson.getMaxSize(),lesson.getLeftSize(),returnTime(times.get(position)),lesson.getSchool(),lesson.getMajor(),lesson.getIsExam(),roomID,lesson.getLength(),0);\r\n            setLessonnew(user);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return 0;\r\n        }\r\n        return max;\r\n    }\r\n    public List<List<Integer>> findTime(String innerID) {\r\n        //要求:选择一个合适的时间\r\n        List<List<Integer>> res=new ArrayList<>();\r\n        List<Integer>tmp=new ArrayList<>();\r\n        try {\r\n            List<Lesson> lesson=LessonDao.search(\"innerID\",innerID);\r\n            Integer length=lesson.get(0).getLength();\r\n            switch(length){\r\n                case 2:{\r\n                    for(int i=0;i<4;i++){\r\n                        for(int j=0;j<5;j++){\r\n                            switch(i){\r\n                                case 0:{\r\n                                    tmp.add(0+13*j);\r\n                                    tmp.add(1+13*j);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    break;\r\n                                }\r\n                                case 1:{\r\n                                    tmp.add(2+13*j);\r\n                                    tmp.add(3+13*j);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    break;\r\n                                }\r\n                                case 2:{\r\n                                    tmp.add(5+13*j);\r\n                                    tmp.add(6+13*j);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    break;\r\n                                }\r\n                                case 3:{\r\n                                    tmp.add(7+13*j);\r\n                                    tmp.add(8+13*j);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    tmp.add(23);\r\n                    tmp.add(24);\r\n                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.add(49);\r\n                    tmp.add(50);\r\n                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    break;\r\n                }\r\n                case 3:{\r\n                    for(int i=0;i<2;i++){\r\n                        for(int j=0;j<5;j++){\r\n                            switch(i){\r\n                                case 0:{\r\n                                    tmp.add(2+13*j);\r\n                                    tmp.add(3+13*j);\r\n                                    tmp.add(4+13*j);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    break;\r\n                                }\r\n                                case 1:{\r\n                                    tmp.add(7+13*j);\r\n                                    tmp.add(8+13*j);\r\n                                    tmp.add(9+13*j);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    tmp.add(23);\r\n                    tmp.add(24);\r\n                    tmp.add(25);\r\n                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.add(49);\r\n                    tmp.add(50);\r\n                    tmp.add(51);\r\n                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    break;\r\n                }\r\n                case 4:{\r\n                    for(int j=0;j<5;j++){//第一节课的星期\r\n                        for(int i=0;i<5;i++){//第一节课的位置\r\n\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean isTimeOK(List<Integer>times,String innerID) {\r\n        //判断对于这个老师来说，这个时间是否可以\r\n        //判断对于教室资源来说，这个时间是否可以\r\n        //判断对于这个专业的课来说，这个时间是否可以\r\n        try {\r\n            List<Lesson> lesson=LessonDao.search(\"innerID\",innerID);\r\n            if(lesson.isEmpty())return false;\r\n            //判断对于这个老师来说，这个时间是否可以\r\n            String teacherID=lesson.get(0).getTeacherID();\r\n            String teachertable=TeacherDao.getLessonTable(teacherID);//取得老师课表\r\n            String[] tmp = teachertable.split(\",\");//根据，切分字符串\r\n            for(Integer time:times ){\r\n                if(!tmp[time].equals(\"0\")&&!tmp[time].equals(\"1\"))\r\n                    //如果此时老师课表有课\r\n                    return false;\r\n            }\r\n            //判断对于教室资源来说，这个时间是否可以\r\n            if(LessonDao.abledRoom(returnTime(times)).isEmpty())\r\n                return false;\r\n            //判断对于这个专业的课来说，这个时间是否可以\r\n            //此时，这门一定要是有效课，status==1\r\n            List<Lesson> lessons=LessonDao.search(\"major\",lesson.get(0).getMajor());\r\n            for(Lesson tmplesson:lessons){\r\n                if(tmplesson.getStatus()==1&&tmplesson.getLessonID()!=lesson.get(0).getLessonID()){\r\n                    //该课为有效课且不为同一门课\r\n                    List<Integer> intersection = ClassTable.getTimeIndex(tmplesson.getTime()).stream().filter(times::contains).collect(toList());\r\n                    if(!intersection.isEmpty())//此时存在交集，即课程冲突\r\n                        return false;\r\n                }\r\n            }\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    public Integer scoreTime(List<Integer> time,String innerID) {\r\n        //要求:给出一个时间，判断其可得几分\r\n        Integer res=0;//得分\r\n        try {\r\n            List<Integer>day=null;//相对时间 0-12\r\n            List<Integer>week=null;//星期 0-4\r\n            List<Integer>noon=null;//上午，下午，晚上 0-2\r\n            for(Integer tmp:time){\r\n                day.add(tmp%13);\r\n                week.add(tmp/13);\r\n                noon.add((tmp%13)/5);\r\n            }\r\n            //时间尽可能连续\r\n            //时长为2，3，则每节课都连着，为4则2，2相连\r\n            switch(time.size()){\r\n                case 2:{\r\n                    if(time.get(0)+1==time.get(1)&&noon.get(0)==noon.get(1))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n                case 3:{\r\n                    if(time.get(0)+1==time.get(1)&&time.get(0)+2==time.get(2)&&noon.get(0)==noon.get(1)&&noon.get(0)==noon.get(2))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n                case 4:{\r\n                    if(time.get(0)+1==time.get(1)&&time.get(2)+1==time.get(3)&&noon.get(0)==noon.get(1)&&noon.get(2)==noon.get(3))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n            }\r\n            //时间尽可能分散\r\n            //时长为4则尽量离远一点\r\n            switch(time.size()){\r\n                case 4:{\r\n                    if(week.get(0)+2<=week.get(2))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n            }\r\n            //尽可能不占用老师的非偏好时间\r\n            List<Lesson> lesson=LessonDao.search(\"innerID\",innerID);\r\n            //判断对于这个老师来说，这个时间是否可以\r\n            String teacherID=lesson.get(0).getTeacherID();\r\n            String teachertable=TeacherDao.getLessonTable(teacherID);//取得老师课表\r\n            String[] temp = teachertable.split(\",\");//根据，切分字符串\r\n            for(Integer tmp:time ){\r\n                if(temp[tmp].equals(\"1\"))\r\n                    //如果此时为老师非偏好时间\r\n                    res-=1;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return 0;\r\n        }\r\n        return res;\r\n    }\r\n    public String returnTime(List<Integer>times) {\r\n        StringBuilder res= new StringBuilder();\r\n        try {\r\n            Integer day=null;//相对时间 1-13\r\n            Integer week=null;//星期 1-5\r\n            Integer i=0;\r\n            for(Integer time:times){\r\n                day=time%13+1;\r\n                week=time/13+1;\r\n                if(i!=0)res.append(\",\");\r\n                i++;\r\n                res.append(week.toString()).append(\"/\").append(day.toString()).append(\"/\").append(day.toString());\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res.toString();\r\n    }\r\n    public Integer setLength(String time) {\r\n        //给出时间，计算其时长\r\n        Integer length=0;\r\n        try {\r\n            length=ClassTable.getTimeIndex(time).size();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return 0;\r\n        }\r\n        return length;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/service/LessonService.java b/src/com/vcampus/server/service/LessonService.java
--- a/src/com/vcampus/server/service/LessonService.java	(revision 248dcae14e58ece431083b6190696d5e7833f4bd)
+++ b/src/com/vcampus/server/service/LessonService.java	(date 1661685834886)
@@ -360,6 +360,15 @@
         }
         return res;
     }
+    public List<String> getGradeStudent(String innerID) {
+        List<String> res = null;
+        try {
+            res = LessonDao.getGrade(studentID);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
     public boolean delete(String deleteID) {
         boolean res=false;
         List<Lesson> lessons=null;
@@ -760,9 +769,80 @@
                     break;
                 }
                 case 4:{
-                    for(int j=0;j<5;j++){//第一节课的星期
+                    for(int j=0;j<4;j++){//第一节课的星期
                         for(int i=0;i<5;i++){//第一节课的位置
+                            switch(i){
+                                case 0:{
+                                    tmp.add(0+13*j);
+                                    tmp.add(1+13*j);
+                                    break;
+                                }
+                                case 1:{
+                                    tmp.add(2+13*j);
+                                    tmp.add(3+13*j);
+                                    break;
+                                }
+                                case 2:{
+                                    tmp.add(5+13*j);
+                                    tmp.add(6+13*j);
+                                    break;
+                                }
+                                case 3:{
+                                    tmp.add(7+13*j);
+                                    tmp.add(8+13*j);
+                                    break;
+                                }
+                                case 4:{
+                                    if(j==0||j==2||j==4){
+                                        tmp.add(10+13*j);
+                                        tmp.add(11+13*j);
+                                    }
+                                }
+                            }
+                            for(int k=j+1;k<5;k++){//第二课的星期
+                                for(int l=0;l<5;l++){//第二节课的位置
+                                    switch(l){
+                                        case 0:{
+                                            tmp.add(0+13*k);
+                                            tmp.add(1+13*k);
+                                            break;
+                                        }
+                                        case 1:{
+                                            tmp.add(2+13*k);
+                                            tmp.add(3+13*k);
+                                            break;
+                                        }
+                                        case 2:{
+                                            tmp.add(5+13*k);
+                                            tmp.add(6+13*k);
+                                            break;
+                                        }
+                                        case 3:{
+                                            tmp.add(7+13*k);
+                                            tmp.add(8+13*k);
+                                            break;
+                                        }
+                                        case 4:{
+                                            if(k==2||k==4){
+                                                tmp.add(10+13*k);
+                                                tmp.add(11+13*k);
+                                            }
+                                        }
+                                    }
+                                    if(tmp.size()==4){
+                                        if(isTimeOK(tmp,innerID))res.add(tmp);
+                                        if(!(l==4&&(k!=2||k!=4))){
+                                            tmp.remove(tmp.size()-1);//删除最后一个元素
+                                            tmp.remove(tmp.size()-1);//删除最后一个元素
+                                        }
+                                    }
 
+                                }
+                            }
+                            if(tmp.size()==2){
+                            tmp.remove(tmp.size()-1);//删除最后一个元素
+                            tmp.remove(tmp.size()-1);//删除最后一个元素
+                            }
                         }
                     }
                     break;
Index: test/com/vcampus/test/LessonTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.test;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.vcampus.net.ClientMessagePasser;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.net.MessagePasser;\r\nimport com.vcampus.pojo.Book;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Teacher;\r\nimport com.vcampus.pojo.User;\r\nimport org.junit.Test;\r\n\r\nimport java.io.IOException;\r\nimport java.net.Socket;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class LessonTest {\r\n    public static void main(String[] args) throws IOException {\r\n        Socket socket = new Socket(\"localhost\", 6666); // 连接指定服务器和端口\r\n        ClientMessagePasser.build(socket.getInputStream(), socket.getOutputStream());\r\n        Gson gson = new Gson();\r\n//      String s = gson.toJson(new Lesson(\"0003\",\"计算机组成原理\",null,null,null,null,\"计算机学院\",\"计算机\",1,null,null,0));\r\n//      String s = gson.toJson(new Teacher(\"33\",\"李四\",\"计算机学院\",\"计算机\",\"1/01/13\",1));\r\n//      String s = gson.toJson(new Lesson(\"0002\",\"信号与系统2\",\"123\",50,50,\"1/3/4,2/3/4\",\"计算机学院\",\"计算机\",1,\"J3-201\",4,1));\r\n//      String s = gson.toJson(new Lesson(\"0002\",\"信号与系统2\",\"135\",30,29,\"1/1/2,2/1/2\",\"计算机学院\",\"计算机\",1,\"J1-101\",4,1));\r\n//      String s = gson.toJson(new Lesson(\"0003\",\"计算机组成原理\",\"33\",10,10,\"1/3/4,1/5/6\",\"计算机学院\",\"计算机\",1,\"J5-201\",4,1));\r\n\r\n        String s=\"999,000333\";\r\n        System.out.println(s);\r\n        MessagePasser passer = ClientMessagePasser.getInstance();\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"post\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"addlesson\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"setteacher\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"postone\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"setlesson\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showlesson\"));\r\n        passer.send(new Message(\"no\", s, \"lesson\", \"selectlesson\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showgradestudent\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"addgrade\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showstatussteacher\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showstatusstudent\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"getspecificteacher\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showteachertime\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"getteacher\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"getstudent\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"get\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showtime\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"getone\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showallteacher\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showroom\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showtable\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"showtablename\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"deleteone\"));\r\n//        passer.send(new Message(\"no\", s, \"lesson\", \"delete\"));\r\n        passer.send(new Message(\"no\", s, \"lesson\", \"arrange\"));\r\n        Message message = (passer.receive());\r\n        Map<String,Object> map = new Gson().fromJson(message.getData(), new TypeToken<HashMap<String,Object>>(){}.getType());\r\n        System.out.println(map.get(\"res\"));\r\n    }\r\n}\r\n//    String s = gson.toJson(new Lesson(\"0002\",\"信号与系统2\",null,null,null,null,\"计算机学院\",\"计算机\",1,null,null,0));\r\n//        System.out.println(s);\r\n//                MessagePasser passer = ClientMessagePasser.getInstance();\r\n//                passer.send(new Message(\"no\", s, \"lesson\", \"setlesson\"));\r\n\r\n//    String s = gson.toJson(new Teacher(\"123\",\"于济源\",\"计算机学院\",\"计算机\",\"1/01/02,2/01/02,3/01/02,4/01/02,5/01/02\",1));\r\n//        System.out.println(s);\r\n//                MessagePasser passer = ClientMessagePasser.getInstance();\r\n//                passer.send(new Message(\"no\", s, \"lesson\", \"setteacher\"));
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/com/vcampus/test/LessonTest.java b/test/com/vcampus/test/LessonTest.java
--- a/test/com/vcampus/test/LessonTest.java	(revision 248dcae14e58ece431083b6190696d5e7833f4bd)
+++ b/test/com/vcampus/test/LessonTest.java	(date 1661685328221)
@@ -30,7 +30,7 @@
 //      String s = gson.toJson(new Lesson("0002","信号与系统2","135",30,29,"1/1/2,2/1/2","计算机学院","计算机",1,"J1-101",4,1));
 //      String s = gson.toJson(new Lesson("0003","计算机组成原理","33",10,10,"1/3/4,1/5/6","计算机学院","计算机",1,"J5-201",4,1));
 
-        String s="999,000333";
+        String s="111,0002123";
         System.out.println(s);
         MessagePasser passer = ClientMessagePasser.getInstance();
 //        passer.send(new Message("no", s, "lesson", "post"));
@@ -57,7 +57,7 @@
 //        passer.send(new Message("no", s, "lesson", "showtablename"));
 //        passer.send(new Message("no", s, "lesson", "deleteone"));
 //        passer.send(new Message("no", s, "lesson", "delete"));
-        passer.send(new Message("no", s, "lesson", "arrange"));
+//        passer.send(new Message("no", s, "lesson", "arrange"));
         Message message = (passer.receive());
         Map<String,Object> map = new Gson().fromJson(message.getData(), new TypeToken<HashMap<String,Object>>(){}.getType());
         System.out.println(map.get("res"));
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"考务系统修改\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/vcampus/server/controller/LessonController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/vcampus/server/controller/LessonController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/vcampus/server/service/LessonService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/vcampus/server/service/LessonService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test/com/vcampus/test/LessonTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test/com/vcampus/test/LessonTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DFN8UqGaWdtufeJ3QLOdvtrWZL\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"foldersAlwaysOnTop\" value=\"false\" />\r\n    <option name=\"showModules\" value=\"false\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"D:/Code/JavaWebCode/Vcampus/src\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"ChangesTree.GroupingKeys\": [\r\n      \"directory\",\r\n      \"module\"\r\n    ],\r\n    \"DatabaseDriversLRU\": [\r\n      \"mysql\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\\src\" />\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.vcampus.client.window\" />\r\n      <recent name=\"com.vcampus.client.login\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.server.Server\" />\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"myLoginTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.client.window.myLoginTest\" />\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.client.window.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"myLoginTest2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.client.window.myLoginTest2\" />\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.client.window.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LessonDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.LessonDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MessageDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.MessageDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"应用程序.Server\" />\r\n        <item itemvalue=\"应用程序.myLoginTest\" />\r\n        <item itemvalue=\"JUnit.LessonDao.test\" />\r\n        <item itemvalue=\"JUnit.MessageDao.test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"\" />\r\n      <created>1660290718338</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1660290718338</updated>\r\n      <workItem from=\"1660290720744\" duration=\"7006000\" />\r\n      <workItem from=\"1660394444650\" duration=\"60000\" />\r\n      <workItem from=\"1660394516873\" duration=\"56000\" />\r\n      <workItem from=\"1660394584644\" duration=\"9000\" />\r\n      <workItem from=\"1660395297646\" duration=\"18000\" />\r\n      <workItem from=\"1660397164596\" duration=\"38000\" />\r\n      <workItem from=\"1660397307971\" duration=\"4358000\" />\r\n      <workItem from=\"1660403234776\" duration=\"303000\" />\r\n      <workItem from=\"1660454140324\" duration=\"96000\" />\r\n      <workItem from=\"1660455383694\" duration=\"9368000\" />\r\n      <workItem from=\"1660546281143\" duration=\"210000\" />\r\n      <workItem from=\"1660553294493\" duration=\"5398000\" />\r\n      <workItem from=\"1660563636857\" duration=\"2164000\" />\r\n      <workItem from=\"1660619044349\" duration=\"4132000\" />\r\n      <workItem from=\"1660637701493\" duration=\"2215000\" />\r\n      <workItem from=\"1660639997270\" duration=\"5427000\" />\r\n      <workItem from=\"1660648925845\" duration=\"884000\" />\r\n      <workItem from=\"1660694384311\" duration=\"5422000\" />\r\n      <workItem from=\"1660745486230\" duration=\"183000\" />\r\n      <workItem from=\"1660745889106\" duration=\"473000\" />\r\n      <workItem from=\"1660815934556\" duration=\"2473000\" />\r\n      <workItem from=\"1660831786373\" duration=\"1983000\" />\r\n      <workItem from=\"1660888580099\" duration=\"3413000\" />\r\n      <workItem from=\"1660918724497\" duration=\"1503000\" />\r\n      <workItem from=\"1660922180929\" duration=\"80000\" />\r\n      <workItem from=\"1660969405563\" duration=\"1904000\" />\r\n      <workItem from=\"1660975764803\" duration=\"1456000\" />\r\n      <workItem from=\"1660977503920\" duration=\"596000\" />\r\n      <workItem from=\"1660991092243\" duration=\"1569000\" />\r\n      <workItem from=\"1660993852382\" duration=\"3050000\" />\r\n      <workItem from=\"1661001183994\" duration=\"134000\" />\r\n      <workItem from=\"1661001398741\" duration=\"2035000\" />\r\n      <workItem from=\"1661047449565\" duration=\"70000\" />\r\n      <workItem from=\"1661048117757\" duration=\"4529000\" />\r\n      <workItem from=\"1661073362879\" duration=\"595000\" />\r\n      <workItem from=\"1661147223714\" duration=\"78000\" />\r\n      <workItem from=\"1661147390790\" duration=\"5933000\" />\r\n      <workItem from=\"1661299612812\" duration=\"7912000\" />\r\n      <workItem from=\"1661346871285\" duration=\"462000\" />\r\n      <workItem from=\"1661349075908\" duration=\"562000\" />\r\n      <workItem from=\"1661393455217\" duration=\"1940000\" />\r\n      <workItem from=\"1661478189564\" duration=\"7499000\" />\r\n      <workItem from=\"1661493808008\" duration=\"4491000\" />\r\n      <workItem from=\"1661517869568\" duration=\"64000\" />\r\n      <workItem from=\"1661574179229\" duration=\"55000\" />\r\n      <workItem from=\"1661578119722\" duration=\"95000\" />\r\n      <workItem from=\"1661599830974\" duration=\"1561000\" />\r\n      <workItem from=\"1661612199823\" duration=\"1601000\" />\r\n      <workItem from=\"1661613824599\" duration=\"1077000\" />\r\n      <workItem from=\"1661614922106\" duration=\"283000\" />\r\n      <workItem from=\"1661615217119\" duration=\"17000\" />\r\n      <workItem from=\"1661649054777\" duration=\"1091000\" />\r\n      <workItem from=\"1661650213055\" duration=\"3477000\" />\r\n      <workItem from=\"1661666663630\" duration=\"13284000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"初步写了登录注册\">\r\n      <created>1660298515554</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660298515554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"写了一个方法把map转为bean对象\">\r\n      <created>1660401643513</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660401643513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"实现可序列化接口\">\r\n      <created>1660554878384</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660554878384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"对注册添加了类型验证\">\r\n      <created>1660555737524</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660555737524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\">\r\n      <created>1660567403654</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660567403654</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\">\r\n      <created>1660648795402</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660648795402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\">\r\n      <created>1660649808298</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660649808298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\">\r\n      <created>1660700337585</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660700337585</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"在lessonDao层添加了增加课程的类\">\r\n      <created>1660745584712</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660745584712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"修改了UserDao层的错误，但service和controller仍存在错误\">\r\n      <created>1660746328997</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660746328997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"给Student添加了image对象\">\r\n      <created>1660820650348</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660820650348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"添加了exam类，初步写了examDao层\">\r\n      <created>1660833772622</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660833772623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"增强了student，加入了民族信息；同时推进了部分examDao层\">\r\n      <created>1660890949742</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660890949742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"baseDao增加了一些公共函数\">\r\n      <created>1660898810557</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660898810557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"继续完善了一些类\">\r\n      <created>1660902650513</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660902650513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"增加了选课判断函数\">\r\n      <created>1660903186114</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660903186114</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"出bug了，测试下\">\r\n      <created>1660919678034</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660919678034</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"初步建立了课表，好难啊\">\r\n      <created>1661003442415</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661003442415</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"修改了student类\">\r\n      <created>1661048787851</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661048787851</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"在lessonDao里添加了几个函数\">\r\n      <created>1661051089899</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661051089899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"对teacherDao层，增加了返回老师课表的功能\">\r\n      <created>1661300170937</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661300170937</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"增加了借书时间\">\r\n      <created>1661302879739</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661302879739</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"教室课表\">\r\n      <created>1661306591233</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661306591233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"为lesson增加了room，添加了删除函数\">\r\n      <created>1661347303508</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661347303508</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"初步写了商店的dao层\">\r\n      <created>1661396068079</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661396068079</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"完善商店Dao层，BaseDao中不再处理异常，会把异常抛给具体Dao层处理\">\r\n      <created>1661481659828</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661481659828</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"修改学生和老师类，添加了status\">\r\n      <created>1661494827120</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661494827120</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"修改数据库名称，修bug\">\r\n      <created>1661578142800</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661578142800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"考务系统修改\">\r\n      <created>1661655295898</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661655295898</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"考务系统修改\">\r\n      <created>1661657071847</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661657071847</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"考务系统修改\">\r\n      <created>1661658725523</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661658725523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"考务系统修改\">\r\n      <created>1661659348468</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661659348468</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"考务系统修改\">\r\n      <created>1661671644124</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661671644124</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"考务系统修改\">\r\n      <created>1661674642769</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661674642769</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"考务系统修改\">\r\n      <created>1661676130692</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661676130692</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"36\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\" />\r\n    <MESSAGE value=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\" />\r\n    <MESSAGE value=\"在lessonDao层添加了增加课程的类\" />\r\n    <MESSAGE value=\"修改了UserDao层的错误，但service和controller仍存在错误\" />\r\n    <MESSAGE value=\"给Student添加了image对象\" />\r\n    <MESSAGE value=\"添加了exam类，初步写了examDao层\" />\r\n    <MESSAGE value=\"增强了student，加入了民族信息；同时推进了部分examDao层\" />\r\n    <MESSAGE value=\"baseDao增加了一些公共函数\" />\r\n    <MESSAGE value=\"继续完善了一些类\" />\r\n    <MESSAGE value=\"增加了选课判断函数\" />\r\n    <MESSAGE value=\"出bug了，测试下\" />\r\n    <MESSAGE value=\"初步建立了课表，好难啊\" />\r\n    <MESSAGE value=\"修改了student类\" />\r\n    <MESSAGE value=\"在lessonDao里添加了几个函数\" />\r\n    <MESSAGE value=\"对teacherDao层，增加了返回老师课表的功能\" />\r\n    <MESSAGE value=\"增加了借书时间\" />\r\n    <MESSAGE value=\"教室课表\" />\r\n    <MESSAGE value=\"为lesson增加了room，添加了删除函数\" />\r\n    <MESSAGE value=\"初步写了商店的dao层\" />\r\n    <MESSAGE value=\"完善商店Dao层，BaseDao中不再处理异常，会把异常抛给具体Dao层处理\" />\r\n    <MESSAGE value=\"进一步完善Dao层，写了站内消息的Dao层\" />\r\n    <MESSAGE value=\"修改学生和老师类，添加了status\" />\r\n    <MESSAGE value=\"修改数据库名称\" />\r\n    <MESSAGE value=\"修改数据库名称，修bug\" />\r\n    <MESSAGE value=\"考务系统修改\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"考务系统修改\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 248dcae14e58ece431083b6190696d5e7833f4bd)
+++ b/.idea/workspace.xml	(date 1661685834980)
@@ -41,26 +41,26 @@
     <option name="foldersAlwaysOnTop" value="false" />
     <option name="showModules" value="false" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "D:/Code/JavaWebCode/Vcampus/src",
-    "settings.editor.selected.configurable": "preferences.pluginManager"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/Code/JavaWebCode/Vcampus/src&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
   },
-  "keyToStringList": {
-    "ChangesTree.GroupingKeys": [
-      "directory",
-      "module"
+  &quot;keyToStringList&quot;: {
+    &quot;ChangesTree.GroupingKeys&quot;: [
+      &quot;directory&quot;,
+      &quot;module&quot;
     ],
-    "DatabaseDriversLRU": [
-      "mysql"
+    &quot;DatabaseDriversLRU&quot;: [
+      &quot;mysql&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\Code\JavaWebCode\Vcampus\src" />
@@ -213,7 +213,9 @@
       <workItem from="1661615217119" duration="17000" />
       <workItem from="1661649054777" duration="1091000" />
       <workItem from="1661650213055" duration="3477000" />
-      <workItem from="1661666663630" duration="13284000" />
+      <workItem from="1661666663630" duration="14361000" />
+      <workItem from="1661684419973" duration="195000" />
+      <workItem from="1661684627251" duration="1207000" />
     </task>
     <task id="LOCAL-00001" summary="初步写了登录注册">
       <created>1660298515554</created>
@@ -460,7 +462,14 @@
       <option name="project" value="LOCAL" />
       <updated>1661676130692</updated>
     </task>
-    <option name="localTasksCounter" value="36" />
+    <task id="LOCAL-00036" summary="考务系统修改">
+      <created>1661679965094</created>
+      <option name="number" value="00036" />
+      <option name="presentableId" value="LOCAL-00036" />
+      <option name="project" value="LOCAL" />
+      <updated>1661679965094</updated>
+    </task>
+    <option name="localTasksCounter" value="37" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
