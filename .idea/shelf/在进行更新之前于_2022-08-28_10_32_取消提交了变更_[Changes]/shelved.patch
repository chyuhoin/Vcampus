Index: src/com/vcampus/server/controller/LessonController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.pojo.Teacher;\r\nimport com.vcampus.server.service.Service;\r\nimport com.vcampus.server.service.LessonService;\r\nimport com.google.gson.*;\r\nimport com.vcampus.server.service.StudentService;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class LessonController implements Controller{\r\n    @Override\r\n    public Message check(Message msg){\r\n        LessonService service = new LessonService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\":\r\n                //添加课程信息\r\n                //输入：课程ID、课程名称、学院、专业、是否有考试\r\n                //此时创建一个其他数据为空的“空课程”\r\n                //只有数据库中没有对应的课程ID才可以创建空课程\r\n                Lesson lesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addLesson(lesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"postone\":\r\n                //添加对应课程的老师\r\n                //输入课程所需的所有数据，创建（内部编号为课程ID+教师ID）\r\n                //如果没有对应课程ID，报错\r\n                //如果有对应课程ID且为“空课程”,视为修改空课程\r\n                //如果有对应课程ID且无空课程，则创建课程\r\n                //如果有对应内部ID，则视为修改\r\n                //在老师的课表里添加信息\r\n                Lesson lessonone = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addOneLesson(lessonone)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case\"addlesson\":\r\n                //添加课程\r\n                //如果存在对应的内部ID则报错\r\n                //如果有老师ID则在老师的课表里添加信息\r\n                Lesson addlesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addLessonnew(addlesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"setlesson\":\r\n                //修改课程\r\n                //如果不存在对应内部ID则报错\r\n                //如果老师ID修改了则进行相应处理\r\n                Lesson setlesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.setLessonnew(setlesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showtable\":\r\n                //输入学生ID，显示其课表\r\n                String studentID2 = msg.getData();\r\n                String res1=service.showTable(studentID2);\r\n                return new Message(\"200\", \"{res: '\"+res1+\"'}\");\r\n            case \"showtablename\":\r\n                //输入学生ID，显示其课表\r\n                //此时把课程的内部ID改为课的名字\r\n                String studentID3 = msg.getData();\r\n                String res2=service.showTable(studentID3);\r\n                String res3=service.showTableName(res2);\r\n                return new Message(\"200\", \"{res: '\"+res3+\"'}\");\r\n            case \"showroom\":\r\n                //输入时间，显示可用教室\r\n                String time = msg.getData();//课程ID\r\n                HashMap<String, Object> map9 = new HashMap<>();\r\n                map9.put(\"res\", service.showRoom(time));\r\n                return new Message(\"200\", gson.toJson(map9));\r\n            case \"addroom\":\r\n                //给课程添加教室\r\n                //输入教室ID，内部ID，给课程添加教室\r\n                //用\",\"隔开\r\n                String oldStr5 = msg.getData();\r\n                String[] strs5 = oldStr5.split(\",\");//根据，切分字符串\r\n                if(service.addRoom(strs5[0],strs5[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showteacher\":\r\n                //添加对应课程的老师时显示所有可选的老师\r\n                //只要专业满足即可选择\r\n                HashMap<String, Object> map1 = new HashMap<>();\r\n                map1.put(\"res\", service.viewTeachers(msg.getData()));\r\n                return new Message(\"200\", gson.toJson(map1));\r\n            case \"showteachertime\":\r\n                //显示所有可选的老师\r\n                //输入时间，专业，用\",\"隔开\r\n                String oldStr6 = msg.getData();\r\n                String[] strs6 = oldStr6.split(\",\");//根据，切分字符串\r\n                HashMap<String, Object> map10 = new HashMap<>();\r\n                map10.put(\"res\", service.viewTeachersTime(strs6[0],strs6[1]));\r\n                return new Message(\"200\", gson.toJson(map10));\r\n            case\"showtime\":\r\n                //输入老师ID，返回所有不可选的时间\r\n                //不可选的时间有：非偏好时间、上课时间\r\n                String teacherID = msg.getData();//课程ID\r\n                String res=service.showTecherTime(teacherID);\r\n                return new Message(\"200\", \"{res: '\"+res+\"'}\");\r\n            case \"delete\":\r\n                //删除课程\r\n                //输入课程ID\r\n                //删除对应课程ID的所有课程,删除对应的考试信息,删除对应学生的课表信息，删除老师的课表信息\r\n                //具体实现：利用课程ID查到内部ID\r\n                //转到内部ID的处理\r\n                String deleteID = msg.getData();//课程ID\r\n                if (service.delete(deleteID)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"deleteone\":\r\n                //删除对应老师教授的特定课程\r\n                //删除对应老师的考试信息\r\n                //输入内部ID\r\n                //具体实现：利用内部ID查到老师ID与学生ID\r\n                //执行老师退课函数（输入老师ID与内部ID，在老师课表中删除对应课的信息）\r\n                //执行学生退课函数（输入学生ID与内部ID，在学生和课的表中删除信息，在学生课表中删除信息）\r\n                //执行删除考试函数（输入内部ID，删除对应考试信息）\r\n                //执行教室退课函数\r\n                //执行删除课程函数（输入内部ID，在课的表里删除信息）\r\n                String deleteoneID = msg.getData();//内部编号\r\n                if (service.deleteone(deleteoneID)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"get\":\r\n                //显示所有课程\r\n                HashMap<String, Object> map2 = new HashMap<>();\r\n                map2.put(\"res\", service.viewAllLessons());\r\n                return new Message(\"200\", gson.toJson(map2));\r\n            case \"getone\":\r\n                //显示某一指标的课程 如“专业:计算机” “指标”+“:”+“数据”\r\n                String data = msg.getData();\r\n                Map<String, String> map = gson.fromJson(data, new TypeToken<HashMap<String, String>>() {}.getType());\r\n                HashMap<String, Object> map3 = new HashMap<>();\r\n                Set<Lesson> lessonSet = new HashSet<>();\r\n                for (Map.Entry<String, String> entry : map.entrySet()) {\r\n                    lessonSet.addAll(service.viewSpecificLessons(entry.getKey(), entry.getValue()));\r\n                }\r\n                map3.put(\"res\", lessonSet);\r\n                return new Message(\"200\", gson.toJson(map3));\r\n            case\"getstudent\":\r\n                //显示对应学生选的课 输入学生ID\r\n                String studentID = msg.getData();\r\n\r\n                HashMap<String, Object> map4 = new HashMap<>();\r\n                map4.put(\"res\", service.searchMine(studentID));\r\n                return new Message(\"200\", gson.toJson(map4));\r\n            case \"getteacher\":\r\n                //显示选择对应课程的学生 输入课程ID\r\n                String lessonID = msg.getData();\r\n                HashMap<String, Object> map5 = new HashMap<>();\r\n                map5.put(\"res\", service.getTeacher(lessonID));\r\n                return new Message(\"200\", gson.toJson(map5));\r\n            case \"getspecificteacher\":\r\n                //显示选择对应课程的学生 输入内部ID\r\n                String innerID = msg.getData();\r\n                HashMap<String, Object> map6 = new HashMap<>();\r\n                map6.put(\"res\", service.getSpecificTeacher(innerID));\r\n                return new Message(\"200\", gson.toJson(map6));\r\n            case \"showstatusstudent\":\r\n                //输入ID，显示内容：*学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               老师：姓名、身份、ID、可选专业、偏好时间\r\n                //返回一个学生的类的list\r\n                String studentID1 = msg.getData();\r\n                HashMap<String, Object> map7 = new HashMap<>();\r\n                map7.put(\"res\", service.searchStudent(studentID1));\r\n                return new Message(\"200\", gson.toJson(map7));\r\n\r\n            case \"showstatussteacher\":\r\n                //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               *老师：姓名、身份、ID、可选专业、偏好时间\r\n                //返回一个老师的类的list\r\n                String teacherID1 = msg.getData();\r\n                HashMap<String, Object> map8 = new HashMap<>();\r\n                map8.put(\"res\", service.searchTeacher(teacherID1));\r\n                return new Message(\"200\", gson.toJson(map8));\r\n            case \"setteacher\":\r\n                //修改老师的可选专业与偏好时间\r\n                //输入一个老师的类\r\n                //如果没有则视为添加\r\n                //如果有则视为修改\r\n                Teacher teacher = gson.fromJson(msg.getData(), Teacher.class);\r\n                if (service.addTeacher(teacher)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"arrange\":\r\n                //自动排课\r\n                //只排未安排的课程\r\n                if (service.Arrange()) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"arrangeall\":\r\n                //自动排课所有课程\r\n                if (service.ArrangeAll()) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"addgrade\":\r\n                //添加成绩\r\n                //输入学生ID，内部ID，成绩，用“,”隔开\r\n                String oldStr1 = msg.getData();\r\n                String[] strs1 = oldStr1.split(\",\");//根据，切分字符串\r\n                if(service.addGrade(strs1[0],strs1[1],Integer.parseInt(strs1[2])))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showgradestudent\":\r\n                //显示成绩\r\n                //输入学生ID，显示其所有成绩\r\n                String studentID4 = msg.getData();\r\n                HashMap<String, Object> map11 = new HashMap<>();\r\n                map11.put(\"res\", service.getGrade(studentID4));\r\n                return new Message(\"200\", gson.toJson(map11));\r\n            case \"showlesson\":\r\n                //显示课程的状态：可选、已选、已满、时间冲突\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr2 = msg.getData();\r\n                String[] strs2 = oldStr2.split(\",\");//根据，切分字符串\r\n                String data1=service.judgeLesson(strs2[0],strs2[1]);\r\n                return new Message(\"200\", \"{res: \"+\"'\"+data1+\"'}\");\r\n            case \"selectlesson\":\r\n                //学生选课\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr3 = msg.getData();\r\n                String[] strs3 = oldStr3.split(\",\");//根据，切分字符串\r\n                if(service.selectLesson(strs3[0],strs3[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"returnlesson\":\r\n                //学生退课\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr4 = msg.getData();\r\n                String[] strs4 = oldStr4.split(\",\");//根据，切分字符串\r\n                if(service.returnLesson(strs4[0],strs4[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/LessonController.java b/src/com/vcampus/server/controller/LessonController.java
--- a/src/com/vcampus/server/controller/LessonController.java	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/src/com/vcampus/server/controller/LessonController.java	(date 1661598358100)
@@ -73,6 +73,12 @@
                 HashMap<String, Object> map9 = new HashMap<>();
                 map9.put("res", service.showRoom(time));
                 return new Message("200", gson.toJson(map9));
+            case "showallteacher":
+                //输入课程号，显示所有老师
+                String lessonID1 = msg.getData();//课程ID
+                HashMap<String, Object> map12 = new HashMap<>();
+                map12.put("res", service.showAllTeacher(lessonID1));
+                return new Message("200", gson.toJson(map12));
             case "addroom":
                 //给课程添加教室
                 //输入教室ID，内部ID，给课程添加教室
Index: src/com/vcampus/server/service/LessonService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.service;\r\n\r\nimport com.vcampus.dao.*;\r\nimport com.vcampus.dao.utils.ClassTable;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.LessonGrade;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.pojo.Teacher;\r\n\r\nimport java.util.List;\r\n\r\nimport static java.util.stream.Collectors.toList;\r\n\r\npublic class LessonService implements Service{\r\n    public boolean addLesson(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(!LessonDao.search(\"lessonID\",user.getLessonID()).isEmpty())//已经有这个课程ID\r\n                res=false;\r\n            else res=LessonDao.addLesson(user);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addOneLesson(Lesson user) {\r\n        boolean res;\r\n        List<Lesson> lessons = null;\r\n        try {\r\n            lessons = LessonDao.search(\"lessonID\", user.getLessonID());\r\n            if (lessons.isEmpty())//没有对应课程ID\r\n                res = false;\r\n            else if (lessons.get(0).getInnerID().equals(lessons.get(0).getLessonID()))//此时为空课程\r\n                if (LessonDao.deleteSpecificLesson(user.getLessonID()))\r\n                {//删除成功\r\n                    res = LessonDao.addLesson(user);\r\n                    if(!res)//添加失败，恢复\r\n                        LessonDao.addLesson(lessons.get(0));\r\n                    else{//添加课程成功，现在添加老师的课表\r\n                        res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        if(!res){//添加老师课表失败，现在恢复\r\n                            LessonDao.deleteLesson(user.getInnerID());\r\n                            LessonDao.addLesson(lessons.get(0));\r\n                        }\r\n                        else{//添加老师课表成功，现在添加教室\r\n                            res=LessonDao.selectLessonForClassroom(user.getTime(),user.getInnerID(),user.getClassroom());\r\n                            if(!res){//添加老师课表失败，现在恢复\r\n                                LessonDao.deleteLesson(user.getInnerID());\r\n                                TeacherDao.returnLesson(user.getTeacherID(),user.getInnerID());\r\n                                LessonDao.addLesson(lessons.get(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {//删除失败\r\n                    res = false;\r\n                }\r\n            else{//此时已经没有空课程\r\n                lessons=LessonDao.search(\"innerID\", user.getInnerID());\r\n                if (lessons.isEmpty())//此时为添加课程\r\n                    if(LessonDao.addLesson(user)){//添加成功\r\n                        res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        if(!res){\r\n                            //添加老师课表失败，恢复\r\n                            LessonDao.deleteLesson(user.getInnerID());\r\n                        }\r\n                        else{\r\n                            //添加老师课表成功，现在开始添加教室课表\r\n                            res=LessonDao.selectLessonForClassroom(user.getTime(),user.getInnerID(),user.getClassroom());\r\n                            if(!res){\r\n                                //添加教室课表失败，恢复\r\n                                LessonDao.deleteLesson(user.getInnerID());\r\n                                TeacherDao.returnLesson(user.getTeacherID(),user.getInnerID());\r\n                            }\r\n                        }\r\n                    }\r\n                else res=false;\r\n                else{//此时为修改课程\r\n                    res=setLessonnew(user);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addLessonnew(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(!LessonDao.search(\"innerID\",user.getInnerID()).isEmpty())//已经有这个内部ID\r\n                res=false;\r\n            else {\r\n                res=LessonDao.addLesson(user);\r\n                if(!res)return false;\r\n                if(user.getTeacherID() != null&&user.getStatus()!=0){\r\n                    //添加课程时也添加了老师且此时为有效课\r\n                    //因此要添加老师的课表\r\n                    res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                    if(!res){\r\n                        //添加失败，恢复\r\n                        LessonDao.deleteLesson(user.getInnerID());\r\n                        return false;\r\n                    }\r\n                }\r\n                if(user.getClassroom()!= null&&user.getStatus()!=0){\r\n                    //添加课程时也添加了教室且此时为有效课\r\n                    //因此要添加教室的课表\r\n                    res=LessonDao.selectLessonForClassroom(user.getTime(),user.getInnerID(),user.getClassroom());\r\n                    if(!res){\r\n                        //添加失败，恢复\r\n                        LessonDao.deleteLesson(user.getInnerID());\r\n                        TeacherDao.deleteTeacher(user.getTeacherID());\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteTest(String innerID) {\r\n        //删除课程\r\n        //如果为有效课且有老师信息，删除老师课表\r\n        //如果为有效课且有教室信息，删除教室信息\r\n        boolean res;\r\n        List<Lesson>lessons=null;\r\n        try {\r\n            lessons=(LessonDao.search(\"innerID\",innerID));\r\n            Lesson user=lessons.get(0);\r\n            if(LessonDao.search(\"innerID\",user.getInnerID()).isEmpty())//没有这个内部ID\r\n                res=false;\r\n            else {\r\n                res=LessonDao.deleteLesson(user.getInnerID());\r\n                if(!res)return false;\r\n                if(user.getTeacherID() != null&&user.getStatus()!=0){\r\n                    //课程有老师且此时为有效课\r\n                    //因此要删除老师的课表\r\n                    res=TeacherDao.returnLesson(user.getTeacherID(),user.getInnerID());\r\n                    if(!res){\r\n                        //删除失败，恢复\r\n                        LessonDao.addLesson(user);\r\n                        return false;\r\n                    }\r\n                }\r\n                if(user.getClassroom()!= null&&user.getStatus()!=0){\r\n                    //添加课程时也添加了教室且此时为有效课\r\n                    //因此要添加教室的课表\r\n                    res=LessonDao.returnLessonForClassroom(user.getInnerID(),user.getClassroom());\r\n                    if(!res){\r\n                        //删除失败，恢复\r\n                        if(user.getTeacherID() != null&&user.getStatus()!=0){\r\n                            TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        }\r\n                        LessonDao.addLesson(user);\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean setLessonnew(Lesson user) {\r\n        boolean res=false;\r\n        try {\r\n            if(LessonDao.search(\"innerID\",user.getInnerID()).isEmpty())//没有这个内部ID\r\n                res=false;\r\n            else {\r\n                if(deleteTest(user.getInnerID())){\r\n                    res=addLessonnew(user);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<String> showRoom(String time) {\r\n        List<String> room=null;\r\n        try {\r\n            room=LessonDao.abledRoom(time);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return room;\r\n    }\r\n    public List<Teacher> viewTeachers(String abledMajor) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            res = TeacherDao.searchTeacher(\"abledMajor\",abledMajor);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Teacher> viewTeachersTime(String time,String abledMajor) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            List<Teacher> tmp = TeacherDao.searchTeacher(\"abledMajor\",abledMajor);\r\n            for(Teacher teacher:tmp){\r\n                boolean isadd=true;\r\n                String teacherID=teacher.getTeacherID();\r\n                String teachertable=TeacherDao.getLessonTable(teacherID);//取得老师课表\r\n                String[] temp = teachertable.split(\",\");//根据，切分字符串\r\n                List<Integer>times=ClassTable.getTimeIndex(time);\r\n                for(Integer tmptime:times ){\r\n                    if(!temp[tmptime].equals(\"0\")){\r\n                    //如果此时老师课表有课或为非偏好时间\r\n                        isadd=false;\r\n                        break;\r\n                    }\r\n                }\r\n                if(isadd)res.add(teacher);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public String showTable(String studentID) {\r\n        String time=null;\r\n        try {\r\n            time = LessonDao.getLessonTable(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return time;\r\n    }\r\n    public String showTableName(String time) {\r\n        String timename=null;\r\n        try {\r\n            List<Lesson>lesson=null;\r\n            String[] tmp = time.split(\",\");//根据，切分字符串\r\n            for(String data:tmp){\r\n                if(!data.equals(\"0\")){\r\n                    //此时有课程，将内部ID变为课程名字\r\n                    lesson=LessonDao.search(\"innerID\",data);\r\n                    data=lesson.get(0).getName();\r\n                }\r\n            }\r\n            timename = String.join(\",\",tmp);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return timename;\r\n    }\r\n    public String showTecherTime(String teacherID) {\r\n        String time=null;\r\n        try {\r\n            String res = TeacherDao.getLessonTable(teacherID);\r\n            String[] tmp = res.split(\",\");//根据，切分字符串\r\n            List<Teacher>teacher=TeacherDao.searchTeacher(\"teacherID\",teacherID);\r\n            if(teacher.isEmpty())return null;\r\n            List<Integer>Liketime= ClassTable.getTimeIndex(teacher.get(0).getTime());\r\n            for(Integer liketime:Liketime){\r\n                if(tmp[liketime].equals(\"0\"))//如果非偏好时间没有选课，则将其变为1\r\n                    tmp[liketime]=\"1\";\r\n            }\r\n            time = String.join(\",\",tmp);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return time;\r\n    }\r\n    public List<Lesson> viewAllLessons() {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> viewSpecificLessons(String field,Object value) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search(field, value);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addRoom(String roomID, String innerID) {\r\n        boolean res;\r\n        try {\r\n            List<Lesson>lesson=LessonDao.search(\"innerID\",innerID);\r\n            if(lesson.isEmpty())return false;\r\n            res=LessonDao.selectLessonForClassroom(lesson.get(0).getTime(),innerID,roomID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addGrade(String studentID, String innerID, Integer grade) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.addGrade(studentID, innerID, grade);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<LessonGrade> getGrade(String studentID) {\r\n        List<LessonGrade> res = null;\r\n        try {\r\n            res = LessonDao.getGrade(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public boolean delete(String deleteID) {\r\n        boolean res=false;\r\n        List<Lesson> lessons=null;\r\n        try {\r\n            lessons=LessonDao.search(\"lessonID\",deleteID);\r\n            if(lessons.isEmpty())//没有这门课\r\n                res=false;\r\n            else for(Lesson lesson:lessons){\r\n                res= deleteone(lesson.getInnerID());\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteone(String deleteoneID) {\r\n        boolean res;\r\n        List<Lesson> lessons=null;\r\n        try {\r\n            lessons=LessonDao.search(\"innerID\",deleteoneID);\r\n            if(lessons.isEmpty())//没有这门课\r\n                res=false;\r\n            else{\r\n                //先执行老师退课函数\r\n                //res=老师退课函数(lessons.get(0).getTeacherID());\r\n                //if(!res)return res;\r\n                //再执行学生退课函数\r\n                List<String> data = null;\r\n                data=LessonDao.searchStudent(deleteoneID);\r\n                for(String student:data){\r\n                    res= LessonDao.returnLesson(student,deleteoneID);\r\n                    if(!res)return res;\r\n                }\r\n                //再执行删除考试函数\r\n                res=ExamDao.deleteExam(deleteoneID);\r\n                if(!res)return res;\r\n                //再执行教室退课函数\r\n                res=LessonDao.deleteAllFromClassroom(deleteoneID);\r\n                if(!res)return res;\r\n                //再执行删除课程函数\r\n                res=LessonDao.deleteLesson(deleteoneID);\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> searchMine(String studentID) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.searchMine(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> getTeacher(String lessonID) {\r\n        List<Student> res = null;\r\n        List<Lesson>data=null;\r\n        List<Student> tmp = null;\r\n        try {\r\n            data=LessonDao.search(\"lessonID\",lessonID);\r\n            for(Lesson lesson:data){\r\n                tmp=getSpecificTeacher(lesson.getInnerID());\r\n                for(Student student:tmp){\r\n                    res.add(student);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> getSpecificTeacher(String innerID) {\r\n        List<Student> res = null;\r\n        List<String>data=null;\r\n        List<Student> tmp = null;\r\n        try {\r\n            data=LessonDao.searchStudent(innerID);\r\n            for(String student:data){\r\n                tmp=StudentDao.search(\"studentID\",student);\r\n                if(!tmp.isEmpty())res.add(tmp.get(0));\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> searchStudent(String studentID) {\r\n        List<Student> res = null;\r\n        try {\r\n            res=StudentDao.search(\"studentID\", studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Teacher> searchTeacher(String teacherID) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            res=TeacherDao.searchTeacher(\"teacherID\", teacherID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public String judgeLesson(String studentID,String innerID) {\r\n        String res;\r\n        try {\r\n            switch(LessonDao.judgeLesson(studentID,innerID)){\r\n                case 0:\r\n                    res= \"Selected\";//已选\r\n                    break;\r\n                case 1:\r\n                    res=\"full\";//已满\r\n                    break;\r\n                case 2:\r\n                    res=\"conflict\";//冲突\r\n                    break;\r\n                case 3:\r\n                    res=\"Optional\";//可选\r\n                    break;\r\n                default:\r\n                    res=\"NO\";//错误\r\n                    break;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return \"NO\";\r\n        }\r\n        return res;\r\n    }\r\n    public boolean returnLesson(String studentID,String innerID) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.returnLesson(studentID, innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean selectLesson(String studentID,String innerID) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.selectLesson(studentID, innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addTeacher(Teacher user) {\r\n        boolean res;\r\n        List<Teacher> teachers = null;\r\n        try {\r\n            teachers = TeacherDao.searchTeacher(\"teacherID\", user.getTeacherID());\r\n            if(!UserDao.search(user.getTeacherID())) {\r\n                //用户管理没有这个ID\r\n                res = false;\r\n            }\r\n            else if(teachers.isEmpty()) {\r\n                //没有对应数据\r\n                //视为添加\r\n                res = TeacherDao.addTeacher(user);\r\n            }\r\n            else if(!TeacherDao.deleteTeacher(user.getTeacherID())) {//视为修改\r\n                //删除信息失败\r\n                res = false;\r\n            }\r\n            else {\r\n                //删除信息成功\r\n                res = TeacherDao.addTeacher(user);\r\n                if(!res) TeacherDao.addTeacher(teachers.get(0));//添加失败，恢复\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean Arrange() {\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson>tmp=LessonDao.search(\"status\",0);\r\n            List<Lesson>lessons=null;\r\n            for(Lesson data:tmp){\r\n                if(!data.getInnerID().equals(data.getLessonID())){//此时不为空课程\r\n                    lessons.add(data);\r\n                }\r\n            }\r\n            if(doArrange(lessons)>0){\r\n                for(Lesson lesson:lessons){\r\n                    res=valueLesson(lesson.getInnerID());\r\n                    if(!res)return false;\r\n                }\r\n                res=true;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean ArrangeAll() {\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson>tmp=LessonDao.search(\"status\",1);\r\n            for(Lesson data:tmp){\r\n                res=unvalueLesson(data.getInnerID());\r\n                if(!res)return false;\r\n            }\r\n            tmp=LessonDao.search(\"status\",0);\r\n            List<Lesson>lessons=null;\r\n            for(Lesson data:tmp){\r\n                if(!data.getInnerID().equals(data.getLessonID())){//此时不为空课程\r\n                    lessons.add(data);\r\n                }\r\n            }\r\n            if(doArrange(lessons)>0){\r\n                for(Lesson lesson:lessons){\r\n                    res=valueLesson(lesson.getInnerID());\r\n                    if(!res)return false;\r\n                }\r\n                res=true;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean valueLesson(String innerID) {\r\n        //把对应课程的状态从0变为1\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson> lessons=LessonDao.search(\"innerID\",innerID);\r\n            lessons.get(0).setStatus(1);\r\n            res=setLessonnew(lessons.get(0));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean unvalueLesson(String innerID) {\r\n        //把对应课程的状态从1变为0\r\n        boolean res=false;\r\n        try {\r\n            List<Lesson> lessons=LessonDao.search(\"innerID\",innerID);\r\n            lessons.get(0).setStatus(0);\r\n            res=setLessonnew(lessons.get(0));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public Integer doArrange(List<Lesson>lessons) {\r\n        //实现逻辑：采用近似算法\r\n        //lessons为要进行排课的课程集合，先从中取出一个进行处理，其余继续采用这个函数计算总分\r\n        //先用findTime函数给出所有可能的时间排列，再利用scoreTime给出这个时间的分数\r\n        //在此课程视为这个时间的基础上进行其他课程的计算，最后取最高分情况\r\n\r\n        Integer max=0;\r\n        Integer position=0;\r\n        Integer tmp=0;\r\n        try {\r\n            Lesson lesson=lessons.get(0);\r\n            lessons.remove(0);\r\n            List<List<Integer>>times=findTime(lesson.getInnerID());\r\n            Integer i=-1;\r\n            for(List<Integer>time:times){\r\n                i++;\r\n                String roomID=LessonDao.abledRoom(returnTime(time)).get(0);\r\n                Lesson user=new Lesson(lesson.getLessonID(),lesson.getName(),lesson.getTeacherID(),lesson.getMaxSize(),lesson.getLeftSize(),returnTime(time),lesson.getSchool(),lesson.getMajor(),lesson.getIsExam(),roomID,lesson.getLength(),1);\r\n                setLessonnew(user);\r\n                tmp=scoreTime(time,lesson.getInnerID())+doArrange(lessons);\r\n                if(tmp>max){\r\n                    max=tmp;\r\n                    position=i;\r\n                }\r\n            }\r\n            String roomID=LessonDao.abledRoom(returnTime(times.get(position))).get(0);\r\n            Lesson user=new Lesson(lesson.getLessonID(),lesson.getName(),lesson.getTeacherID(),lesson.getMaxSize(),lesson.getLeftSize(),returnTime(times.get(position)),lesson.getSchool(),lesson.getMajor(),lesson.getIsExam(),roomID,lesson.getLength(),0);\r\n            setLessonnew(user);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return 0;\r\n        }\r\n        return max;\r\n    }\r\n    public List<List<Integer>> findTime(String innerID) {\r\n        //要求:选择一个合适的时间\r\n        List<List<Integer>> res=null;\r\n        List<Integer>tmp=null;\r\n        try {\r\n            List<Lesson> lesson=LessonDao.search(\"innerID\",innerID);\r\n            Integer length=lesson.get(0).getLength();\r\n            switch(length){\r\n                case 1:{\r\n                    for(int i=0;i<64;i++){\r\n                        tmp=null;\r\n                        tmp.add(i);\r\n                        if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                    }\r\n                    break;\r\n                }\r\n                case 2:{\r\n                    for(int i=0;i<64;i++){\r\n                        tmp.add(i);\r\n                        for(int j=i+1;j<64;j++){\r\n                        tmp.add(j);\r\n                        if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                        tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                        }\r\n                        tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    }\r\n                    break;\r\n                }\r\n                case 3:{\r\n                    for(int i=0;i<64;i++){\r\n                        tmp.add(i);\r\n                        for(int j=i+1;j<64;j++){\r\n                            tmp.add(j);\r\n                            for(int k=j+1;k<64;k++){\r\n                                tmp.add(k);\r\n                                if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                            }\r\n                            tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                        }\r\n                        tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    }\r\n                    break;\r\n                }\r\n                case 4:{\r\n                    for(int i=0;i<64;i++){\r\n                        tmp.add(i);\r\n                        for(int j=i+1;j<64;j++){\r\n                            tmp.add(j);\r\n                            for(int k=j+1;k<64;k++){\r\n                                tmp.add(k);\r\n                                for(int l=k+1;l<64;l++){\r\n                                    tmp.add(l);\r\n                                    if(isTimeOK(tmp,innerID))res.add(tmp);\r\n                                    tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                                }\r\n                                tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                            }\r\n                            tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                        }\r\n                        tmp.remove(tmp.size()-1);//删除最后一个元素\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean isTimeOK(List<Integer>times,String innerID) {\r\n        //判断对于这个老师来说，这个时间是否可以\r\n        //判断对于教室资源来说，这个时间是否可以\r\n        //判断对于这个专业的课来说，这个时间是否可以\r\n        try {\r\n            List<Lesson> lesson=LessonDao.search(\"innerID\",innerID);\r\n            if(lesson.isEmpty())return false;\r\n            //判断对于这个老师来说，这个时间是否可以\r\n            String teacherID=lesson.get(0).getTeacherID();\r\n            String teachertable=TeacherDao.getLessonTable(teacherID);//取得老师课表\r\n            String[] tmp = teachertable.split(\",\");//根据，切分字符串\r\n            for(Integer time:times ){\r\n                if(!tmp[time].equals(\"0\")&&!tmp[time].equals(\"1\"))\r\n                    //如果此时老师课表有课\r\n                    return false;\r\n            }\r\n            //判断对于教室资源来说，这个时间是否可以\r\n            if(LessonDao.abledRoom(returnTime(times)).isEmpty())\r\n                return false;\r\n            //判断对于这个专业的课来说，这个时间是否可以\r\n            //此时，这门一定要是有效课，status==1\r\n            List<Lesson> lessons=LessonDao.search(\"major\",lesson.get(0).getMajor());\r\n            for(Lesson tmplesson:lessons){\r\n                if(tmplesson.getStatus()==1&&tmplesson.getLessonID()!=lesson.get(0).getLessonID()){\r\n                    //该课为有效课且不为同一门课\r\n                    List<Integer> intersection = ClassTable.getTimeIndex(tmplesson.getTime()).stream().filter(times::contains).collect(toList());\r\n                    if(!intersection.isEmpty())//此时存在交集，即课程冲突\r\n                        return false;\r\n                }\r\n            }\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    public Integer scoreTime(List<Integer> time,String innerID) {\r\n        //要求:给出一个时间，判断其可得几分\r\n        Integer res=0;//得分\r\n        try {\r\n            List<Integer>day=null;//相对时间 0-12\r\n            List<Integer>week=null;//星期 0-4\r\n            List<Integer>noon=null;//上午，下午，晚上 0-2\r\n            for(Integer tmp:time){\r\n                day.add(tmp%13);\r\n                week.add(tmp/13);\r\n                noon.add((tmp%13)/5);\r\n            }\r\n            //时间尽可能连续\r\n            //时长为2，3，则每节课都连着，为4则2，2相连\r\n            switch(time.size()){\r\n                case 2:{\r\n                    if(time.get(0)+1==time.get(1)&&noon.get(0)==noon.get(1))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n                case 3:{\r\n                    if(time.get(0)+1==time.get(1)&&time.get(0)+2==time.get(2)&&noon.get(0)==noon.get(1)&&noon.get(0)==noon.get(2))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n                case 4:{\r\n                    if(time.get(0)+1==time.get(1)&&time.get(2)+1==time.get(3)&&noon.get(0)==noon.get(1)&&noon.get(2)==noon.get(3))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n            }\r\n            //时间尽可能分散\r\n            //时长为4则尽量离远一点\r\n            switch(time.size()){\r\n                case 4:{\r\n                    if(week.get(0)+2<=week.get(2))\r\n                        res+=1;\r\n                    break;\r\n                }\r\n            }\r\n            //尽可能不占用老师的非偏好时间\r\n            List<Lesson> lesson=LessonDao.search(\"innerID\",innerID);\r\n            //判断对于这个老师来说，这个时间是否可以\r\n            String teacherID=lesson.get(0).getTeacherID();\r\n            String teachertable=TeacherDao.getLessonTable(teacherID);//取得老师课表\r\n            String[] temp = teachertable.split(\",\");//根据，切分字符串\r\n            for(Integer tmp:time ){\r\n                if(temp[tmp].equals(\"1\"))\r\n                    //如果此时为老师非偏好时间\r\n                    res-=1;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return 0;\r\n        }\r\n        return res;\r\n    }\r\n    public String returnTime(List<Integer>times) {\r\n        StringBuilder res= null;\r\n        try {\r\n            Integer day=null;//相对时间 1-13\r\n            Integer week=null;//星期 1-5\r\n            Integer i=0;\r\n            for(Integer time:times){\r\n                day=time%13+1;\r\n                week=time/13+1;\r\n                if(i!=0)res.append(\",\");\r\n                i++;\r\n                res.append(week.toString()).append(\"/\").append(day.toString()).append(\"/\").append(day.toString());\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res.toString();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/service/LessonService.java b/src/com/vcampus/server/service/LessonService.java
--- a/src/com/vcampus/server/service/LessonService.java	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/src/com/vcampus/server/service/LessonService.java	(date 1661598362271)
@@ -35,8 +35,9 @@
                 if (LessonDao.deleteSpecificLesson(user.getLessonID()))
                 {//删除成功
                     res = LessonDao.addLesson(user);
-                    if(!res)//添加失败，恢复
+                    if(!res){//添加失败，恢复
                         LessonDao.addLesson(lessons.get(0));
+                    }
                     else{//添加课程成功，现在添加老师的课表
                         res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());
                         if(!res){//添加老师课表失败，现在恢复
@@ -169,11 +170,16 @@
     public boolean setLessonnew(Lesson user) {
         boolean res=false;
         try {
-            if(LessonDao.search("innerID",user.getInnerID()).isEmpty())//没有这个内部ID
+            List<Lesson>lessons=LessonDao.search("innerID",user.getInnerID());
+            if(lessons.isEmpty())//没有这个内部ID
                 res=false;
             else {
                 if(deleteTest(user.getInnerID())){
                     res=addLessonnew(user);
+                    if(!res){
+                        //添加失败，恢复
+                        addLessonnew(lessons.get(0));
+                    }
                 }
             }
         } catch (Exception e) {
@@ -191,6 +197,21 @@
         }
         return room;
     }
+    public List<Teacher> showAllTeacher(String lessonID) {
+        List<Teacher> teachers=null;
+        try {
+            List<Lesson>lessons=LessonDao.search("lessonID",lessonID);
+            for(Lesson lesson:lessons){
+                List<Teacher>tmp=TeacherDao.searchTeacher("teacherID",lesson.getTeacherID());
+                for(Teacher temp:tmp){
+                    teachers.add(temp);
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return teachers;
+    }
     public List<Teacher> viewTeachers(String abledMajor) {
         List<Teacher> res = null;
         try {
@@ -258,7 +279,7 @@
             String[] tmp = res.split(",");//根据，切分字符串
             List<Teacher>teacher=TeacherDao.searchTeacher("teacherID",teacherID);
             if(teacher.isEmpty())return null;
-            List<Integer>Liketime= ClassTable.getTimeIndex(teacher.get(0).getTime());
+            List<Integer>Liketime= ClassTable.getTimeIndex(teacher.get(0).getTimeTable());
             for(Integer liketime:Liketime){
                 if(tmp[liketime].equals("0"))//如果非偏好时间没有选课，则将其变为1
                     tmp[liketime]="1";
@@ -487,6 +508,7 @@
                 //没有对应数据
                 //视为添加
                 res = TeacherDao.addTeacher(user);
+                if(true)return true;
             }
             else if(!TeacherDao.deleteTeacher(user.getTeacherID())) {//视为修改
                 //删除信息失败
Index: src/com/vcampus/pojo/Lesson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.pojo;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic class Lesson implements Serializable {\r\n    String innerID;\r\n    String lessonID;\r\n    String name;\r\n    String teacherID;\r\n    Integer maxSize;\r\n    Integer leftSize;\r\n    String time;\r\n    String school;\r\n    String major;\r\n    Integer isExam;\r\n    String classroom;\r\n    Integer length;\r\n    Integer status;\r\n\r\n    //lesson的innerID为lessonID+teacherID，不需要手动输入\r\n    public Lesson(String lessonID, String name, String teacherID, Integer maxSize, Integer leftSize, String time, String school, String major, Integer isExam,String classroom,Integer length,Integer status) {\r\n        this.innerID = lessonID+teacherID;\r\n        this.lessonID = lessonID;\r\n        this.name = name;\r\n        this.teacherID = teacherID;\r\n        this.maxSize = maxSize;\r\n        this.leftSize = leftSize;\r\n        this.time = time;\r\n        this.school = school;\r\n        this.major = major;\r\n        this.isExam = isExam;\r\n        this.classroom = classroom;\r\n        this.length = length;\r\n        this.status = status;\r\n    }\r\n\r\n    public Lesson() {\r\n    }\r\n\r\n    public String getClassroom() {\r\n        return classroom;\r\n    }\r\n\r\n    public void setClassroom(String classroom) {\r\n        this.classroom = classroom;\r\n    }\r\n\r\n    public Integer getLength() {\r\n        return length;\r\n    }\r\n\r\n    public void setLength(Integer length) {\r\n        this.length = length;\r\n    }\r\n\r\n    public Integer getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(Integer status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getInnerID() {\r\n        return innerID;\r\n    }\r\n\r\n    public void setInnerID(String innerID) {\r\n        this.innerID = innerID;\r\n    }\r\n\r\n    public String getLessonID() {\r\n        return lessonID;\r\n    }\r\n\r\n    public void setLessonID(String lessonID) {\r\n        this.lessonID = lessonID;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getTeacherID() {\r\n        return teacherID;\r\n    }\r\n\r\n    public void setTeacherID(String teacherID) {\r\n        this.teacherID = teacherID;\r\n    }\r\n\r\n    public Integer getMaxSize() {\r\n        return maxSize;\r\n    }\r\n\r\n    public void setMaxSize(Integer maxSize) {\r\n        this.maxSize = maxSize;\r\n    }\r\n\r\n    public Integer getLeftSize() {\r\n        return leftSize;\r\n    }\r\n\r\n    public void setLeftSize(Integer leftSize) {\r\n        this.leftSize = leftSize;\r\n    }\r\n\r\n    public String getTime() {\r\n        return time;\r\n    }\r\n\r\n    public void setTime(String time) {\r\n        this.time = time;\r\n    }\r\n\r\n    public String getSchool() {\r\n        return school;\r\n    }\r\n\r\n    public void setSchool(String school) {\r\n        this.school = school;\r\n    }\r\n\r\n    public String getMajor() {\r\n        return major;\r\n    }\r\n\r\n    public void setMajor(String major) {\r\n        this.major = major;\r\n    }\r\n\r\n    public Integer getIsExam() {\r\n        return isExam;\r\n    }\r\n\r\n    public void setIsExam(Integer isExam) {\r\n        this.isExam = isExam;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Lesson{\" +\r\n                \"innerID='\" + innerID + '\\'' +\r\n                \", lessonID='\" + lessonID + '\\'' +\r\n                \", name='\" + name + '\\'' +\r\n                \", teacherID='\" + teacherID + '\\'' +\r\n                \", maxSize=\" + maxSize +\r\n                \", leftSize=\" + leftSize +\r\n                \", time='\" + time + '\\'' +\r\n                \", school='\" + school + '\\'' +\r\n                \", major='\" + major + '\\'' +\r\n                \", isExam=\" + isExam +\r\n                \", classroom='\" + classroom + '\\'' +\r\n                \", length=\" + length +\r\n                \", status=\" + status +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/pojo/Lesson.java b/src/com/vcampus/pojo/Lesson.java
--- a/src/com/vcampus/pojo/Lesson.java	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/src/com/vcampus/pojo/Lesson.java	(date 1661598358116)
@@ -19,7 +19,8 @@
 
     //lesson的innerID为lessonID+teacherID，不需要手动输入
     public Lesson(String lessonID, String name, String teacherID, Integer maxSize, Integer leftSize, String time, String school, String major, Integer isExam,String classroom,Integer length,Integer status) {
-        this.innerID = lessonID+teacherID;
+        if(teacherID == null)this.innerID =lessonID;
+        else this.innerID = lessonID+teacherID;
         this.lessonID = lessonID;
         this.name = name;
         this.teacherID = teacherID;
Index: src/com/vcampus/dao/utils/ClassTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.dao.utils;\r\n\r\nimport org.junit.Test;\r\n\r\nimport java.sql.Connection;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\npublic class ClassTable {\r\n    public static List<Integer> getTimeIndex(String time){\r\n        String []str1 = time.split(\",\");\r\n        List<Integer> timetable=new ArrayList<>();\r\n        for(String str:str1){\r\n            String[]temp=str.split(\"/\");\r\n            int s = Integer.valueOf(temp[0])*13+Integer.valueOf(temp[1])-1;\r\n            int e = Integer.valueOf(temp[0])*13+Integer.valueOf(temp[2])-1;\r\n            for(int i=s;i<=e;i++)\r\n                timetable.add(i);\r\n        }\r\n        return timetable;\r\n    }\r\n    public static Boolean compare(String lessonTime,String lessonTable){\r\n        String []str2 = lessonTable.split(\",\");\r\n        List<Integer>timetable = getTimeIndex(lessonTime);\r\n        for(Integer temp:timetable){\r\n            if(!Objects.equals(str2[temp], \"0\"))return false;\r\n        }\r\n        return true;\r\n    }\r\n    public static  void addToTable (String lessonID,String studentID, Connection conn) throws Exception {\r\n        String sql1 = \"select time from tb_LESSON where innerID = '\"+lessonID+\"'\";\r\n        String lessonTime =(String) CRUD.Query(sql1,conn).get(0).get(\"time\");\r\n        String sql2 = \"select timeTable from tb_LESSONTABLE where studentID = '\"+studentID+\"'\";\r\n        List<Map<String,Object>> resultList = CRUD.Query(sql2,conn);\r\n        if(resultList.isEmpty()) {\r\n            String sqlextra = \"insert into tb_LESSONTABLE (studentID) values('\" + studentID + \"')\";\r\n            CRUD.update(sqlextra,conn);\r\n            resultList = CRUD.Query(sql2,conn);\r\n        }\r\n        String myTable = (String)resultList.get(0).get(\"timeTable\");\r\n        List<Integer>tableIndex = getTimeIndex(lessonTime);\r\n        String[] table=myTable.split(\",\");\r\n        for(Integer temp:tableIndex){\r\n            table[temp]=lessonID;\r\n        }\r\n        String newTable = String.join(\",\",table);\r\n        String sql3 = \"update tb_LESSONTABLE set timeTable ='\"+newTable+\"'\"+\" where studentID = '\"+studentID+\"'\";\r\n        CRUD.update(sql3,conn);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/dao/utils/ClassTable.java b/src/com/vcampus/dao/utils/ClassTable.java
--- a/src/com/vcampus/dao/utils/ClassTable.java	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/src/com/vcampus/dao/utils/ClassTable.java	(date 1661598358108)
@@ -14,8 +14,8 @@
         List<Integer> timetable=new ArrayList<>();
         for(String str:str1){
             String[]temp=str.split("/");
-            int s = Integer.valueOf(temp[0])*13+Integer.valueOf(temp[1])-1;
-            int e = Integer.valueOf(temp[0])*13+Integer.valueOf(temp[2])-1;
+            int s = (Integer.valueOf(temp[0])-1)*13+Integer.valueOf(temp[1])-1;
+            int e = (Integer.valueOf(temp[0])-1)*13+Integer.valueOf(temp[2])-1;
             for(int i=s;i<=e;i++)
                 timetable.add(i);
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"修改数据库名称\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_8_19_16_42_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_8_19_16_42__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_36___Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_54___Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/_2022-08-19_17_56___Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-19_14_36_取消提交了变更_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-19_14_54_取消提交了变更_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-19_17_56_取消提交了变更_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/jdbc.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/jdbc.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/vcampus/dao/ShopDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/vcampus/dao/ShopDao.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DFN8UqGaWdtufeJ3QLOdvtrWZL\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"foldersAlwaysOnTop\" value=\"false\" />\r\n    <option name=\"showModules\" value=\"false\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Code/JavaWebCode/Vcampus/src&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;File.Encoding&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;ChangesTree.GroupingKeys&quot;: [\r\n      &quot;directory&quot;,\r\n      &quot;module&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\\src\" />\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.vcampus.client.login\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.MessageDao.test\">\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.client.Client\" />\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.client.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"myLoginTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.client.window.myLoginTest\" />\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.client.window.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LibraryDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.LibraryDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MessageDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.MessageDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ShopDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.ShopDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.MessageDao.test\" />\r\n        <item itemvalue=\"JUnit.ShopDao.test\" />\r\n        <item itemvalue=\"JUnit.LibraryDao.test\" />\r\n        <item itemvalue=\"Application.myLoginTest\" />\r\n        <item itemvalue=\"Application.Client\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"\" />\r\n      <created>1660290718338</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1660290718338</updated>\r\n      <workItem from=\"1660290720744\" duration=\"7006000\" />\r\n      <workItem from=\"1660394444650\" duration=\"60000\" />\r\n      <workItem from=\"1660394516873\" duration=\"56000\" />\r\n      <workItem from=\"1660394584644\" duration=\"9000\" />\r\n      <workItem from=\"1660395297646\" duration=\"18000\" />\r\n      <workItem from=\"1660397164596\" duration=\"38000\" />\r\n      <workItem from=\"1660397307971\" duration=\"4358000\" />\r\n      <workItem from=\"1660403234776\" duration=\"303000\" />\r\n      <workItem from=\"1660454140324\" duration=\"96000\" />\r\n      <workItem from=\"1660455383694\" duration=\"9368000\" />\r\n      <workItem from=\"1660546281143\" duration=\"210000\" />\r\n      <workItem from=\"1660553294493\" duration=\"5398000\" />\r\n      <workItem from=\"1660563636857\" duration=\"2164000\" />\r\n      <workItem from=\"1660619044349\" duration=\"4132000\" />\r\n      <workItem from=\"1660637701493\" duration=\"2215000\" />\r\n      <workItem from=\"1660639997270\" duration=\"5427000\" />\r\n      <workItem from=\"1660648925845\" duration=\"884000\" />\r\n      <workItem from=\"1660694384311\" duration=\"5422000\" />\r\n      <workItem from=\"1660745486230\" duration=\"183000\" />\r\n      <workItem from=\"1660745889106\" duration=\"473000\" />\r\n      <workItem from=\"1660815934556\" duration=\"2473000\" />\r\n      <workItem from=\"1660831786373\" duration=\"1983000\" />\r\n      <workItem from=\"1660888580099\" duration=\"3413000\" />\r\n      <workItem from=\"1660918724497\" duration=\"1503000\" />\r\n      <workItem from=\"1660922180929\" duration=\"80000\" />\r\n      <workItem from=\"1660969405563\" duration=\"1904000\" />\r\n      <workItem from=\"1660975764803\" duration=\"1456000\" />\r\n      <workItem from=\"1660977503920\" duration=\"596000\" />\r\n      <workItem from=\"1660991092243\" duration=\"1569000\" />\r\n      <workItem from=\"1660993852382\" duration=\"3050000\" />\r\n      <workItem from=\"1661001183994\" duration=\"134000\" />\r\n      <workItem from=\"1661001398741\" duration=\"2035000\" />\r\n      <workItem from=\"1661047449565\" duration=\"70000\" />\r\n      <workItem from=\"1661048117757\" duration=\"4529000\" />\r\n      <workItem from=\"1661073362879\" duration=\"595000\" />\r\n      <workItem from=\"1661147223714\" duration=\"78000\" />\r\n      <workItem from=\"1661147390790\" duration=\"5933000\" />\r\n      <workItem from=\"1661299612812\" duration=\"7912000\" />\r\n      <workItem from=\"1661346871285\" duration=\"462000\" />\r\n      <workItem from=\"1661349075908\" duration=\"562000\" />\r\n      <workItem from=\"1661393455217\" duration=\"1940000\" />\r\n      <workItem from=\"1661478189564\" duration=\"7499000\" />\r\n      <workItem from=\"1661493808008\" duration=\"4491000\" />\r\n      <workItem from=\"1661517869568\" duration=\"64000\" />\r\n      <workItem from=\"1661574179229\" duration=\"55000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"初步写了登录注册\">\r\n      <created>1660298515554</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660298515554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"写了一个方法把map转为bean对象\">\r\n      <created>1660401643513</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660401643513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"实现可序列化接口\">\r\n      <created>1660554878384</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660554878384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"对注册添加了类型验证\">\r\n      <created>1660555737524</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660555737524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\">\r\n      <created>1660567403654</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660567403654</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\">\r\n      <created>1660648795402</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660648795402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\">\r\n      <created>1660649808298</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660649808298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\">\r\n      <created>1660700337585</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660700337585</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"在lessonDao层添加了增加课程的类\">\r\n      <created>1660745584712</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660745584712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"修改了UserDao层的错误，但service和controller仍存在错误\">\r\n      <created>1660746328997</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660746328997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"给Student添加了image对象\">\r\n      <created>1660820650348</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660820650348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"添加了exam类，初步写了examDao层\">\r\n      <created>1660833772622</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660833772623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"增强了student，加入了民族信息；同时推进了部分examDao层\">\r\n      <created>1660890949742</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660890949742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"baseDao增加了一些公共函数\">\r\n      <created>1660898810557</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660898810557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"继续完善了一些类\">\r\n      <created>1660902650513</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660902650513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"增加了选课判断函数\">\r\n      <created>1660903186114</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660903186114</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"出bug了，测试下\">\r\n      <created>1660919678034</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660919678034</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"初步建立了课表，好难啊\">\r\n      <created>1661003442415</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661003442415</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"修改了student类\">\r\n      <created>1661048787851</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661048787851</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"在lessonDao里添加了几个函数\">\r\n      <created>1661051089899</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661051089899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"对teacherDao层，增加了返回老师课表的功能\">\r\n      <created>1661300170937</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661300170937</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"增加了借书时间\">\r\n      <created>1661302879739</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661302879739</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"教室课表\">\r\n      <created>1661306591233</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661306591233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"为lesson增加了room，添加了删除函数\">\r\n      <created>1661347303508</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661347303508</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"初步写了商店的dao层\">\r\n      <created>1661396068079</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661396068079</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"完善商店Dao层，BaseDao中不再处理异常，会把异常抛给具体Dao层处理\">\r\n      <created>1661481659828</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661481659828</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"修改学生和老师类，添加了status\">\r\n      <created>1661494827120</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661494827120</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\" />\r\n    <MESSAGE value=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\" />\r\n    <MESSAGE value=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\" />\r\n    <MESSAGE value=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\" />\r\n    <MESSAGE value=\"在lessonDao层添加了增加课程的类\" />\r\n    <MESSAGE value=\"修改了UserDao层的错误，但service和controller仍存在错误\" />\r\n    <MESSAGE value=\"给Student添加了image对象\" />\r\n    <MESSAGE value=\"添加了exam类，初步写了examDao层\" />\r\n    <MESSAGE value=\"增强了student，加入了民族信息；同时推进了部分examDao层\" />\r\n    <MESSAGE value=\"baseDao增加了一些公共函数\" />\r\n    <MESSAGE value=\"继续完善了一些类\" />\r\n    <MESSAGE value=\"增加了选课判断函数\" />\r\n    <MESSAGE value=\"出bug了，测试下\" />\r\n    <MESSAGE value=\"初步建立了课表，好难啊\" />\r\n    <MESSAGE value=\"修改了student类\" />\r\n    <MESSAGE value=\"在lessonDao里添加了几个函数\" />\r\n    <MESSAGE value=\"对teacherDao层，增加了返回老师课表的功能\" />\r\n    <MESSAGE value=\"增加了借书时间\" />\r\n    <MESSAGE value=\"教室课表\" />\r\n    <MESSAGE value=\"为lesson增加了room，添加了删除函数\" />\r\n    <MESSAGE value=\"初步写了商店的dao层\" />\r\n    <MESSAGE value=\"完善商店Dao层，BaseDao中不再处理异常，会把异常抛给具体Dao层处理\" />\r\n    <MESSAGE value=\"进一步完善Dao层，写了站内消息的Dao层\" />\r\n    <MESSAGE value=\"修改学生和老师类，添加了status\" />\r\n    <MESSAGE value=\"修改数据库名称\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"修改数据库名称\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/.idea/workspace.xml	(date 1661653709718)
@@ -1,18 +1,17 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="15435ea3-daf0-45be-876d-97d3668b8c59" name="Changes" comment="修改数据库名称">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_8_19_16_42_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_8_19_16_42__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_36___Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_54___Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_17_56___Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-19_14_36_取消提交了变更_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-19_14_54_取消提交了变更_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-19_17_56_取消提交了变更_[Changes]/shelved.patch" beforeDir="false" />
+    <list default="true" id="15435ea3-daf0-45be-876d-97d3668b8c59" name="Changes" comment="自动排课">
+      <change afterPath="$PROJECT_DIR$/test/com/vcampus/test/LessonTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/jdbc.properties" beforeDir="false" afterPath="$PROJECT_DIR$/jdbc.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/vcampus/dao/ShopDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/dao/ShopDao.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/dao/TeacherDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/dao/TeacherDao.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/dao/utils/ClassTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/dao/utils/ClassTable.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/pojo/Lesson.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/pojo/Lesson.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/pojo/Teacher.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/pojo/Teacher.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/controller/LessonController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/controller/LessonController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/service/LessonService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/service/LessonService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -48,23 +47,27 @@
     <option name="foldersAlwaysOnTop" value="false" />
     <option name="showModules" value="false" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/Code/JavaWebCode/Vcampus/src&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;File.Encoding&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_ADD_EXTERNAL_FILES": "true",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "last_opened_file_path": "D:/Code/JavaWebCode/Vcampus/src",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "File.Encoding"
   },
-  &quot;keyToStringList&quot;: {
-    &quot;ChangesTree.GroupingKeys&quot;: [
-      &quot;directory&quot;,
-      &quot;module&quot;
+  "keyToStringList": {
+    "ChangesTree.GroupingKeys": [
+      "directory",
+      "module"
+    ],
+    "DatabaseDriversLRU": [
+      "mysql"
     ]
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\Code\JavaWebCode\Vcampus\src" />
@@ -74,7 +77,7 @@
       <recent name="com.vcampus.client.login" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.MessageDao.test">
+  <component name="RunManager">
     <configuration name="Client" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.vcampus.client.Client" />
       <module name="Vcampus" />
@@ -88,12 +91,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="myLoginTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.client.window.myLoginTest" />
+    <configuration name="Server" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.server.Server" />
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.client.window.*" />
+          <option name="PATTERN" value="com.vcampus.server.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -101,23 +104,20 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="LibraryDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="myLoginTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.client.window.myLoginTest" />
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.dao.*" />
+          <option name="PATTERN" value="com.vcampus.client.window.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="com.vcampus.dao" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.LibraryDao" />
-      <option name="METHOD_NAME" value="test" />
-      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="MessageDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="LessonDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
@@ -126,14 +126,14 @@
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="com.vcampus.dao" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.MessageDao" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.LessonDao" />
       <option name="METHOD_NAME" value="test" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ShopDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="LibraryDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
@@ -142,7 +142,7 @@
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="com.vcampus.dao" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.ShopDao" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.LibraryDao" />
       <option name="METHOD_NAME" value="test" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
@@ -151,11 +151,9 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.MessageDao.test" />
-        <item itemvalue="JUnit.ShopDao.test" />
+        <item itemvalue="应用程序.Server" />
         <item itemvalue="JUnit.LibraryDao.test" />
-        <item itemvalue="Application.myLoginTest" />
-        <item itemvalue="Application.Client" />
+        <item itemvalue="JUnit.LessonDao.test" />
       </list>
     </recent_temporary>
   </component>
@@ -205,13 +203,9 @@
       <workItem from="1661147223714" duration="78000" />
       <workItem from="1661147390790" duration="5933000" />
       <workItem from="1661299612812" duration="7912000" />
-      <workItem from="1661346871285" duration="462000" />
-      <workItem from="1661349075908" duration="562000" />
-      <workItem from="1661393455217" duration="1940000" />
-      <workItem from="1661478189564" duration="7499000" />
-      <workItem from="1661493808008" duration="4491000" />
-      <workItem from="1661517869568" duration="64000" />
-      <workItem from="1661574179229" duration="55000" />
+      <workItem from="1661346871285" duration="395000" />
+      <workItem from="1661598316454" duration="1441000" />
+      <workItem from="1661649315754" duration="4390000" />
     </task>
     <task id="LOCAL-00001" summary="初步写了登录注册">
       <created>1660298515554</created>
@@ -374,35 +368,7 @@
       <option name="project" value="LOCAL" />
       <updated>1661306591233</updated>
     </task>
-    <task id="LOCAL-00024" summary="为lesson增加了room，添加了删除函数">
-      <created>1661347303508</created>
-      <option name="number" value="00024" />
-      <option name="presentableId" value="LOCAL-00024" />
-      <option name="project" value="LOCAL" />
-      <updated>1661347303508</updated>
-    </task>
-    <task id="LOCAL-00025" summary="初步写了商店的dao层">
-      <created>1661396068079</created>
-      <option name="number" value="00025" />
-      <option name="presentableId" value="LOCAL-00025" />
-      <option name="project" value="LOCAL" />
-      <updated>1661396068079</updated>
-    </task>
-    <task id="LOCAL-00026" summary="完善商店Dao层，BaseDao中不再处理异常，会把异常抛给具体Dao层处理">
-      <created>1661481659828</created>
-      <option name="number" value="00026" />
-      <option name="presentableId" value="LOCAL-00026" />
-      <option name="project" value="LOCAL" />
-      <updated>1661481659828</updated>
-    </task>
-    <task id="LOCAL-00027" summary="修改学生和老师类，添加了status">
-      <created>1661494827120</created>
-      <option name="number" value="00027" />
-      <option name="presentableId" value="LOCAL-00027" />
-      <option name="project" value="LOCAL" />
-      <updated>1661494827120</updated>
-    </task>
-    <option name="localTasksCounter" value="28" />
+    <option name="localTasksCounter" value="24" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -451,6 +417,10 @@
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
+    <MESSAGE value="初步写了登录注册" />
+    <MESSAGE value="写了一个方法把map转为bean对象" />
+    <MESSAGE value="实现可序列化接口" />
+    <MESSAGE value="对注册添加了类型验证" />
     <MESSAGE value="完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下" />
     <MESSAGE value="这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。" />
     <MESSAGE value="重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了" />
@@ -470,13 +440,7 @@
     <MESSAGE value="对teacherDao层，增加了返回老师课表的功能" />
     <MESSAGE value="增加了借书时间" />
     <MESSAGE value="教室课表" />
-    <MESSAGE value="为lesson增加了room，添加了删除函数" />
-    <MESSAGE value="初步写了商店的dao层" />
-    <MESSAGE value="完善商店Dao层，BaseDao中不再处理异常，会把异常抛给具体Dao层处理" />
-    <MESSAGE value="进一步完善Dao层，写了站内消息的Dao层" />
-    <MESSAGE value="修改学生和老师类，添加了status" />
-    <MESSAGE value="修改数据库名称" />
-    <option name="LAST_COMMIT_MESSAGE" value="修改数据库名称" />
+    <option name="LAST_COMMIT_MESSAGE" value="教室课表" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: src/com/vcampus/dao/TeacherDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.dao;\r\n\r\n\r\nimport com.vcampus.dao.utils.CRUD;\r\nimport com.vcampus.dao.utils.mapToBean;\r\nimport com.vcampus.pojo.Teacher;\r\nimport org.junit.Test;\r\n\r\nimport java.rmi.MarshalledObject;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static com.vcampus.dao.utils.ClassTable.getTimeIndex;\r\n\r\npublic class TeacherDao extends UserDao {\r\n    public static Boolean addTeacher(Teacher teacher){\r\n       try {\r\n           addClass(teacher,\"tb_TEACHER\");\r\n           return true;\r\n       }catch (Exception e){\r\n           System.out.println(\"wrong\");\r\n           return false;\r\n       }\r\n    }\r\n    //删除一个老师\r\n    public static Boolean deleteTeacher(String teacherID){\r\n        try {\r\n            delete(\"teacherID\",teacherID,\"tb_USR\");\r\n            return true;\r\n        }catch (Exception e){\r\n            System.out.println(\"wrong\");\r\n            return false;\r\n        }\r\n    }\r\n    //查找一个老师\r\n    public static List<Teacher> searchTeacher(String field,String value) throws Exception {\r\n        String sql = \"select * from tb_TEACHER where \"+field+\"'\"+value+\"'\";\r\n        List<Map<String,Object>> resultList = CRUD.Query(sql,conn);\r\n        List<Teacher> result = new ArrayList<>();\r\n        for(Map<String ,Object>map:resultList){\r\n            Teacher teacher = mapToBean.map2Bean(map,Teacher.class);\r\n            result.add(teacher);\r\n        }\r\n        return result;\r\n    }\r\n    //老师课表的选课与退课\r\n    public static Boolean selectLesson(String teacherID,String innerID){\r\n        try {\r\n            String sql = \"select timeTable from tb_LESSONTABLEFORTEACHER where teacherID = '\" + teacherID + \"'\";\r\n            List<Map<String, Object>> resultList = CRUD.Query(sql, conn);\r\n            if(resultList.isEmpty()){\r\n                String sqlextra=\"insert into tb_LESSONTABLEFORTEACHER (teacherID)values('\"+teacherID+\"')\";\r\n                CRUD.update(sqlextra,conn);\r\n                resultList = CRUD.Query(sql,conn);\r\n            }\r\n            String sql2 =\"select time from tb_LESSON where innerID ='\"+innerID+\"'\";\r\n            String lessonTime = (String) CRUD.Query(sql2,conn).get(0).get(\"time\");\r\n            String myTable = (String) resultList.get(0).get(\"timeTable\");\r\n            List<Integer>tableIndex = getTimeIndex(lessonTime);\r\n            String[] table=myTable.split(\",\");\r\n            for(Integer temp:tableIndex){\r\n                table[temp]=innerID;\r\n            }\r\n            String resultTable=String.join(\",\",table);\r\n            String sql3=\"update tb_LESSONTABLEFORTEACHER set tableTime ='\"+resultTable+\"' where teacherID ='\"+teacherID+\"'\";\r\n            CRUD.update(sql3,conn);\r\n            return true;\r\n        }catch (Exception e){\r\n            System.out.println(\"wrong\");\r\n            return false;\r\n        }\r\n    }\r\n    //老师退课\r\n    public static Boolean returnLesson(String teacherID,String innerID){\r\n        try {\r\n            String sql = \"update tb_LESSONTABLEFORTEACHER set timeTable = REPLACE(timeTable,'\"+innerID+\"','0') where teacherID ='\"+teacherID+\"'\";\r\n            CRUD.update(sql,conn);\r\n            return true;\r\n        }catch (Exception e){\r\n            System.out.println(\"wrong\");\r\n            return false;\r\n        }\r\n    }\r\n    //获得老师课表\r\n    public static String getLessonTable(String teacherID) throws Exception {\r\n        String sql = \"select timeTable from tb_LESSONTABLEFORTEACHER where teacherID ='\"+teacherID+\"'\";\r\n        List<Map<String,Object>> resultList = CRUD.Query(sql,conn);\r\n        return (String) resultList.get(0).get(\"timeTable\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/dao/TeacherDao.java b/src/com/vcampus/dao/TeacherDao.java
--- a/src/com/vcampus/dao/TeacherDao.java	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/src/com/vcampus/dao/TeacherDao.java	(date 1661598362254)
@@ -7,6 +7,7 @@
 import org.junit.Test;
 
 import java.rmi.MarshalledObject;
+import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -14,14 +15,14 @@
 import static com.vcampus.dao.utils.ClassTable.getTimeIndex;
 
 public class TeacherDao extends UserDao {
-    public static Boolean addTeacher(Teacher teacher){
-       try {
+    public static Boolean addTeacher(Teacher teacher) throws SQLException, IllegalAccessException {
+      // try {
            addClass(teacher,"tb_TEACHER");
            return true;
-       }catch (Exception e){
-           System.out.println("wrong");
-           return false;
-       }
+//       }catch (Exception e){
+//           System.out.println("wrong");
+//           return false;
+//       }
     }
     //删除一个老师
     public static Boolean deleteTeacher(String teacherID){
@@ -35,7 +36,7 @@
     }
     //查找一个老师
     public static List<Teacher> searchTeacher(String field,String value) throws Exception {
-        String sql = "select * from tb_TEACHER where "+field+"'"+value+"'";
+        String sql = "select * from tb_TEACHER where "+field+"='"+value+"'";
         List<Map<String,Object>> resultList = CRUD.Query(sql,conn);
         List<Teacher> result = new ArrayList<>();
         for(Map<String ,Object>map:resultList){
@@ -45,8 +46,8 @@
         return result;
     }
     //老师课表的选课与退课
-    public static Boolean selectLesson(String teacherID,String innerID){
-        try {
+    public static Boolean selectLesson(String teacherID,String innerID) throws Exception {
+       // try {
             String sql = "select timeTable from tb_LESSONTABLEFORTEACHER where teacherID = '" + teacherID + "'";
             List<Map<String, Object>> resultList = CRUD.Query(sql, conn);
             if(resultList.isEmpty()){
@@ -63,13 +64,13 @@
                 table[temp]=innerID;
             }
             String resultTable=String.join(",",table);
-            String sql3="update tb_LESSONTABLEFORTEACHER set tableTime ='"+resultTable+"' where teacherID ='"+teacherID+"'";
+            String sql3="update tb_LESSONTABLEFORTEACHER set timeTable ='"+resultTable+"' where teacherID ='"+teacherID+"'";
             CRUD.update(sql3,conn);
             return true;
-        }catch (Exception e){
-            System.out.println("wrong");
-            return false;
-        }
+//        }catch (Exception e){
+//            System.out.println("wrong");
+//            return false;
+//        }
     }
     //老师退课
     public static Boolean returnLesson(String teacherID,String innerID){
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"dataSourceStorageLocal\" created-in=\"IU-221.6008.13\">\r\n    <data-source name=\"vcampus\" uuid=\"16ab1209-50a4-4f5c-abc4-19d56b62a9e5\">\r\n      <database-info product=\"MySQL\" version=\"5.7.38-log\" jdbc-version=\"4.2\" driver-name=\"MySQL Connector/J\" driver-version=\"mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)\" dbms=\"MYSQL\" exact-version=\"5.7.38\" exact-driver-version=\"8.0\">\r\n        <extra-name-characters>#@</extra-name-characters>\r\n        <identifier-quote-string>`</identifier-quote-string>\r\n      </database-info>\r\n      <case-sensitivity plain-identifiers=\"exact\" quoted-identifiers=\"exact\" />\r\n      <secret-storage>master_key</secret-storage>\r\n      <user-name>summer</user-name>\r\n      <schema-mapping>\r\n        <introspection-scope>\r\n          <node kind=\"schema\" qname=\"@\" />\r\n        </introspection-scope>\r\n      </schema-mapping>\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/.idea/dataSources.local.xml	(date 1661649951639)
@@ -1,14 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="IU-221.6008.13">
-    <data-source name="vcampus" uuid="16ab1209-50a4-4f5c-abc4-19d56b62a9e5">
+  <component name="dataSourceStorageLocal" created-in="IU-222.3345.118">
+    <data-source name="vcampus" uuid="da3e7a7f-58f7-4008-9d28-dc14faad0643">
       <database-info product="MySQL" version="5.7.38-log" jdbc-version="4.2" driver-name="MySQL Connector/J" driver-version="mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)" dbms="MYSQL" exact-version="5.7.38" exact-driver-version="8.0">
         <extra-name-characters>#@</extra-name-characters>
         <identifier-quote-string>`</identifier-quote-string>
       </database-info>
       <case-sensitivity plain-identifiers="exact" quoted-identifiers="exact" />
       <secret-storage>master_key</secret-storage>
-      <user-name>summer</user-name>
+      <user-name>Vcampus</user-name>
       <schema-mapping>
         <introspection-scope>
           <node kind="schema" qname="@" />
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DataSourceManagerImpl\" format=\"xml\" multifile-model=\"true\">\r\n    <data-source source=\"LOCAL\" name=\"vcampus\" uuid=\"16ab1209-50a4-4f5c-abc4-19d56b62a9e5\">\r\n      <driver-ref>mysql.8</driver-ref>\r\n      <synchronize>true</synchronize>\r\n      <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>\r\n      <jdbc-url>jdbc:mysql://180.76.235.163:3306/summer</jdbc-url>\r\n      <working-dir>$ProjectFileDir$</working-dir>\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
--- a/.idea/dataSources.xml	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/.idea/dataSources.xml	(date 1661649804141)
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
-    <data-source source="LOCAL" name="vcampus" uuid="16ab1209-50a4-4f5c-abc4-19d56b62a9e5">
+    <data-source source="LOCAL" name="vcampus" uuid="da3e7a7f-58f7-4008-9d28-dc14faad0643">
       <driver-ref>mysql.8</driver-ref>
       <synchronize>true</synchronize>
       <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>
-      <jdbc-url>jdbc:mysql://180.76.235.163:3306/summer</jdbc-url>
+      <jdbc-url>jdbc:mysql://180.76.235.163:3306/vcampus</jdbc-url>
       <working-dir>$ProjectFileDir$</working-dir>
     </data-source>
   </component>
Index: test/com/vcampus/test/LessonTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/com/vcampus/test/LessonTest.java b/test/com/vcampus/test/LessonTest.java
new file mode 100644
--- /dev/null	(date 1661653709637)
+++ b/test/com/vcampus/test/LessonTest.java	(date 1661653709637)
@@ -0,0 +1,59 @@
+package com.vcampus.test;
+
+import com.google.gson.Gson;
+import com.google.gson.JsonElement;
+import com.google.gson.reflect.TypeToken;
+import com.vcampus.net.ClientMessagePasser;
+import com.vcampus.net.Message;
+import com.vcampus.net.MessagePasser;
+import com.vcampus.pojo.Book;
+import com.vcampus.pojo.Lesson;
+import com.vcampus.pojo.Teacher;
+import com.vcampus.pojo.User;
+import org.junit.Test;
+
+import java.io.IOException;
+import java.net.Socket;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class LessonTest {
+    public static void main(String[] args) throws IOException {
+        Socket socket = new Socket("localhost", 6666); // 连接指定服务器和端口
+        ClientMessagePasser.build(socket.getInputStream(), socket.getOutputStream());
+        Gson gson = new Gson();
+//        String s = gson.toJson(new Lesson("0003","计算机组成原理",null,null,null,null,"计算机学院","计算机",1,null,null,0));
+//    String s = gson.toJson(new Teacher("33","李四","计算机学院","计算机","1/01/13",1));
+//        String s = gson.toJson(new Lesson("0002","信号与系统2","123",50,50,"1/3/4,2/3/4","计算机学院","计算机",1,"J3-201",4,1));
+//        String s = gson.toJson(new Lesson("0002","信号与系统2","135",30,30,"1/1/2,2/1/2","计算机学院","计算机",1,"J1-101",4,1));
+//        String s = gson.toJson(new Lesson("0003","计算机组成原理","33",10,10,"1/3/4,1/5/6","计算机学院","计算机",1,"J5-201",4,1));
+
+        String s="33";
+        System.out.println(s);
+        MessagePasser passer = ClientMessagePasser.getInstance();
+//        passer.send(new Message("no", s, "lesson", "post"));
+//                passer.send(new Message("no", s, "lesson", "setteacher"));
+//        passer.send(new Message("no", s, "lesson", "postone"));
+//        passer.send(new Message("no", s, "lesson", "setlesson"));
+//        passer.send(new Message("no", s, "lesson", "showlesson"));
+//        passer.send(new Message("no", s, "lesson", "selectlesson"));
+//        passer.send(new Message("no", s, "lesson", "showgradestudent"));
+//        passer.send(new Message("no", s, "lesson", "addgrade"));
+        passer.send(new Message("no", s, "lesson", "showstatussteacher"));
+//        passer.send(new Message("no", s, "lesson", "showstatusstudent"));
+        Message message = (passer.receive());
+        Map<String,Object> map = new Gson().fromJson(message.getData(), new TypeToken<HashMap<String,Object>>(){}.getType());
+        System.out.println(map.get("res"));
+    }
+}
+//    String s = gson.toJson(new Lesson("0002","信号与系统2",null,null,null,null,"计算机学院","计算机",1,null,null,0));
+//        System.out.println(s);
+//                MessagePasser passer = ClientMessagePasser.getInstance();
+//                passer.send(new Message("no", s, "lesson", "setlesson"));
+
+//    String s = gson.toJson(new Teacher("123","于济源","计算机学院","计算机","1/01/02,2/01/02,3/01/02,4/01/02,5/01/02",1));
+//        System.out.println(s);
+//                MessagePasser passer = ClientMessagePasser.getInstance();
+//                passer.send(new Message("no", s, "lesson", "setteacher"));
\ No newline at end of file
Index: src/com/vcampus/pojo/Teacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.pojo;\r\n\r\npublic class Teacher {\r\n    String teacherID;//实际上就是教师的一卡通号\r\n    String teacherName;\r\n    String school;\r\n    String abledMajor;\r\n    String time;\r\n    Integer status;\r\n    public Teacher(String teacherID, String teacherName, String school, String abledMajor, String time,Integer status) {\r\n        this.teacherID = teacherID;\r\n        this.teacherName = teacherName;\r\n        this.school = school;\r\n        this.abledMajor = abledMajor;\r\n        this.time = time;\r\n        this.status = status;\r\n    }\r\n\r\n    public Teacher() {\r\n    }\r\n\r\n    public String getTeacherID() {\r\n        return teacherID;\r\n    }\r\n\r\n    public void setTeacherID(String teacherID) {\r\n        this.teacherID = teacherID;\r\n    }\r\n\r\n    public String getTeacherName() {\r\n        return teacherName;\r\n    }\r\n\r\n    public void setTeacherName(String teacherName) {\r\n        this.teacherName = teacherName;\r\n    }\r\n\r\n    public String getAbledMajor() {\r\n        return abledMajor;\r\n    }\r\n\r\n    public void setAbledMajor(String abledMajor) {\r\n        this.abledMajor = abledMajor;\r\n    }\r\n\r\n    public String getTime() {\r\n        return time;\r\n    }\r\n\r\n    public void setTime(String time) {\r\n        this.time = time;\r\n    }\r\n\r\n    public String getSchool() {\r\n        return school;\r\n    }\r\n\r\n    public void setSchool(String school) {\r\n        this.school = school;\r\n    }\r\n\r\n    public Integer getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(Integer status) {\r\n        this.status = status;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Teacher{\" +\r\n                \"teacherID='\" + teacherID + '\\'' +\r\n                \", teacherName='\" + teacherName + '\\'' +\r\n                \", school='\" + school + '\\'' +\r\n                \", abledMajor='\" + abledMajor + '\\'' +\r\n                \", time='\" + time + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/pojo/Teacher.java b/src/com/vcampus/pojo/Teacher.java
--- a/src/com/vcampus/pojo/Teacher.java	(revision 580530fdc01de826c7d2519adb50861b104e5067)
+++ b/src/com/vcampus/pojo/Teacher.java	(date 1661598362287)
@@ -5,14 +5,14 @@
     String teacherName;
     String school;
     String abledMajor;
-    String time;
+    String timeTable;
     Integer status;
     public Teacher(String teacherID, String teacherName, String school, String abledMajor, String time,Integer status) {
         this.teacherID = teacherID;
         this.teacherName = teacherName;
         this.school = school;
         this.abledMajor = abledMajor;
-        this.time = time;
+        this.timeTable = time;
         this.status = status;
     }
 
@@ -43,12 +43,12 @@
         this.abledMajor = abledMajor;
     }
 
-    public String getTime() {
-        return time;
+    public String getTimeTable() {
+        return timeTable;
     }
 
-    public void setTime(String time) {
-        this.time = time;
+    public void setTime(String timeTable) {
+        this.timeTable = timeTable;
     }
 
     public String getSchool() {
@@ -74,7 +74,7 @@
                 ", teacherName='" + teacherName + '\'' +
                 ", school='" + school + '\'' +
                 ", abledMajor='" + abledMajor + '\'' +
-                ", time='" + time + '\'' +
+            //    ", time='" + time + '\'' +
                 '}';
     }
 }
