Index: src/com/vcampus/server/controller/LessonController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.pojo.Teacher;\r\nimport com.vcampus.server.service.Service;\r\nimport com.vcampus.server.service.LessonService;\r\nimport com.google.gson.*;\r\nimport com.vcampus.server.service.StudentService;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class LessonController implements Controller{\r\n    @Override\r\n    public Message check(Message msg){\r\n        LessonService service = new LessonService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\":\r\n                //添加课程信息\r\n                //输入：课程ID、课程名称、学院、专业、是否有考试\r\n                //此时创建一个其他数据为空的“空课程”\r\n                //只有数据库中没有对应的课程ID才可以创建空课程\r\n                Lesson lesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addLesson(lesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"postone\":\r\n                //添加对应课程的老师\r\n                //输入课程所需的所有数据，创建（内部编号为课程ID+教师ID）\r\n                //如果没有对应课程ID，报错\r\n                //如果有对应课程ID且为“空课程”,视为修改空课程\r\n                //如果有对应课程ID且无空课程，则创建课程\r\n                //如果有对应内部ID，则视为修改\r\n                //在老师的课表里添加信息\r\n                Lesson lessonone = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addOneLesson(lessonone)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showteacher\":\r\n                //添加对应课程的老师时显示所有可选的老师\r\n                //只要专业满足即可选择\r\n                HashMap<String, Object> map1 = new HashMap<>();\r\n                map1.put(\"res\", service.viewTeachers(msg.getData()));\r\n                return new Message(\"200\", gson.toJson(map1));\r\n            case\"showtime\":\r\n                //输入老师ID，返回所有不可选的时间\r\n                //不可选的时间有：非偏好时间、上课时间\r\n            case \"delete\":\r\n                //删除课程\r\n                //输入课程ID\r\n                //删除对应课程ID的所有课程,删除对应的考试信息,删除对应学生的课表信息，删除老师的课表信息\r\n                //具体实现：利用课程ID查到内部ID\r\n                //转到内部ID的处理\r\n                String deleteID = msg.getData();//课程ID\r\n                if (service.delete(deleteID)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"deleteone\":\r\n                //删除对应老师教授的特定课程\r\n                //删除对应老师的考试信息\r\n                //输入内部ID\r\n                //具体实现：利用内部ID查到老师ID与学生ID\r\n                //执行老师退课函数（输入老师ID与内部ID，在老师课表中删除对应课的信息）\r\n                //执行学生退课函数（输入学生ID与内部ID，在学生和课的表中删除信息，在学生课表中删除信息）\r\n                //执行删除考试函数（输入内部ID，删除对应考试信息）\r\n                //执行删除课程函数（输入内部ID，在课的表里删除信息）\r\n                String deleteoneID = msg.getData();//内部编号\r\n                if (service.deleteone(deleteoneID)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"get\":\r\n                //显示所有课程\r\n                HashMap<String, Object> map2 = new HashMap<>();\r\n                map2.put(\"res\", service.viewAllLessons());\r\n                return new Message(\"200\", gson.toJson(map2));\r\n            case \"getone\":\r\n                //显示某一指标的课程 如“专业:计算机” “指标”+“:”+“数据”\r\n                String data = msg.getData();\r\n                Map<String, String> map = gson.fromJson(data, new TypeToken<HashMap<String, String>>() {}.getType());\r\n                HashMap<String, Object> map3 = new HashMap<>();\r\n                Set<Lesson> lessonSet = new HashSet<>();\r\n                for (Map.Entry<String, String> entry : map.entrySet()) {\r\n                    lessonSet.addAll(service.viewSpecificLessons(entry.getKey(), entry.getValue()));\r\n                }\r\n                map3.put(\"res\", lessonSet);\r\n                return new Message(\"200\", gson.toJson(map3));\r\n            case\"getstudent\":\r\n                //显示对应学生选的课 输入学生ID\r\n                String studentID = msg.getData();\r\n\r\n                HashMap<String, Object> map4 = new HashMap<>();\r\n                map4.put(\"res\", service.searchMine(studentID));\r\n                return new Message(\"200\", gson.toJson(map4));\r\n            case \"getteacher\":\r\n                //显示选择对应课程的学生 输入课程ID\r\n                String lessonID = msg.getData();\r\n                HashMap<String, Object> map5 = new HashMap<>();\r\n                map5.put(\"res\", service.getTeacher(lessonID));\r\n                return new Message(\"200\", gson.toJson(map5));\r\n            case \"getspecificteacher\":\r\n                //显示选择对应课程的学生 输入内部ID\r\n                String innerID = msg.getData();\r\n                HashMap<String, Object> map6 = new HashMap<>();\r\n                map6.put(\"res\", service.getSpecificTeacher(innerID));\r\n                return new Message(\"200\", gson.toJson(map6));\r\n            case \"showstatusstudent\":\r\n                //输入ID，显示内容：*学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               老师：姓名、身份、ID、可选专业、偏好时间\r\n                //返回一个学生的类的list\r\n                String studentID1 = msg.getData();\r\n                HashMap<String, Object> map7 = new HashMap<>();\r\n                map7.put(\"res\", service.searchStudent(studentID1));\r\n                return new Message(\"200\", gson.toJson(map7));\r\n\r\n            case \"showstatussteacher\":\r\n                //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               *老师：姓名、身份、ID、可选专业、偏好时间\r\n                //返回一个老师的类的list\r\n                String teacherID = msg.getData();\r\n                HashMap<String, Object> map8 = new HashMap<>();\r\n                map8.put(\"res\", service.searchTeacher(teacherID));\r\n                return new Message(\"200\", gson.toJson(map8));\r\n            case \"setteacher\":\r\n                //修改老师的可选专业与偏好时间\r\n                //输入一个老师的类\r\n                //如果没有则视为添加\r\n                //如果有则视为修改\r\n                Teacher teacher = gson.fromJson(msg.getData(), Teacher.class);\r\n                if (service.addTeacher(teacher)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"arrange\":\r\n                //自动排课，输入课程ID\r\n            case \"addgrade\":\r\n                //添加成绩\r\n                //输入学生ID，内部ID，成绩，用“,”隔开\r\n                String oldStr1 = msg.getData();\r\n                String[] strs1 = oldStr1.split(\",\");//根据，切分字符串\r\n                if(service.addGrade(strs1[0],strs1[1],Integer.parseInt(strs1[2])))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"showlesson\":\r\n                //显示课程的状态：可选、已选、已满、时间冲突\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr2 = msg.getData();\r\n                String[] strs2 = oldStr2.split(\",\");//根据，切分字符串\r\n                String data1=service.judgeLesson(strs2[0],strs2[1]);\r\n                return new Message(\"200\", \"{res: \"+\"'\"+data1+\"'}\");\r\n            case \"selectlesson\":\r\n                //学生选课\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr3 = msg.getData();\r\n                String[] strs3 = oldStr3.split(\",\");//根据，切分字符串\r\n                if(service.selectLesson(strs3[0],strs3[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"returnlesson\":\r\n                //学生退课\r\n                //输入学生ID与课程号 用\",\"隔开\r\n                String oldStr4 = msg.getData();\r\n                String[] strs4 = oldStr4.split(\",\");//根据，切分字符串\r\n                if(service.returnLesson(strs4[0],strs4[1]))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/LessonController.java b/src/com/vcampus/server/controller/LessonController.java
--- a/src/com/vcampus/server/controller/LessonController.java	(revision 454a08e000c60dbb0354443bdfec887233018516)
+++ b/src/com/vcampus/server/controller/LessonController.java	(date 1661308207925)
@@ -50,6 +50,9 @@
             case"showtime":
                 //输入老师ID，返回所有不可选的时间
                 //不可选的时间有：非偏好时间、上课时间
+                String teacherID = msg.getData();//课程ID
+                String res=service.showTecherTime(teacherID);
+                return new Message("200", "{res: '"+res+"'}");
             case "delete":
                 //删除课程
                 //输入课程ID
@@ -120,9 +123,9 @@
                 //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业
                 //               *老师：姓名、身份、ID、可选专业、偏好时间
                 //返回一个老师的类的list
-                String teacherID = msg.getData();
+                String teacherID1 = msg.getData();
                 HashMap<String, Object> map8 = new HashMap<>();
-                map8.put("res", service.searchTeacher(teacherID));
+                map8.put("res", service.searchTeacher(teacherID1));
                 return new Message("200", gson.toJson(map8));
             case "setteacher":
                 //修改老师的可选专业与偏好时间
Index: src/com/vcampus/server/service/LessonService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.service;\r\n\r\nimport com.vcampus.dao.*;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.pojo.Teacher;\r\n\r\nimport java.util.List;\r\npublic class LessonService implements Service{\r\n    public boolean addLesson(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(!LessonDao.search(\"lessonID\",user.getLessonID()).isEmpty())//已经有这个课程ID\r\n                res=false;\r\n            else res=LessonDao.addLesson(user);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addOneLesson(Lesson user) {\r\n        boolean res;\r\n        List<Lesson> lessons = null;\r\n        try {\r\n            lessons = LessonDao.search(\"lessonID\", user.getLessonID());\r\n            if (lessons.isEmpty())//没有对应课程ID\r\n                res = false;\r\n            else if (lessons.get(0).getInnerID() == null)//此时为空课程\r\n                if (LessonDao.deleteSpecificLesson(user.getLessonID()))\r\n                {//删除成功\r\n                    res = LessonDao.addLesson(user);\r\n                    if(!res)//添加失败，恢复\r\n                        LessonDao.addLesson(lessons.get(0));\r\n                    else{//添加课程成功，现在添加老师的课表\r\n                        res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                        if(!res){//添加老师课表失败，现在恢复\r\n                            LessonDao.addLesson(lessons.get(0));\r\n                        }\r\n                    }\r\n                }\r\n                else {//删除失败\r\n                    res = false;\r\n                }\r\n            else{//此时已经没有空课程\r\n                lessons=LessonDao.search(\"innerID\", user.getInnerID());\r\n                if (lessons.isEmpty())//此时为添加课程\r\n                    if(LessonDao.addLesson(user))//添加成功\r\n                        res=TeacherDao.selectLesson(user.getTeacherID(),user.getInnerID());\r\n                    else res=false;\r\n                else{//此时为修改课程\r\n                    if (LessonDao.deleteLesson(user.getInnerID()))\r\n                    {//删除成功\r\n                        res = LessonDao.addLesson(user);\r\n                        if(!res)//添加失败，恢复\r\n                            LessonDao.addLesson(lessons.get(0));\r\n                        else{//添加成功，现在开始添加老师课表\r\n                            if(TeacherDao.returnLesson(lessons.get(0).getTeacherID(),lessons.get(0).getInnerID())) {\r\n                                //先退选之前的课,且成功\r\n                                res = TeacherDao.selectLesson(user.getTeacherID(), user.getInnerID());\r\n                                if(!res){//老师选课失败，恢复\r\n                                    LessonDao.addLesson(lessons.get(0));\r\n                                    TeacherDao.selectLesson(lessons.get(0).getTeacherID(),lessons.get(0).getInnerID());\r\n                                }\r\n                            }\r\n                            else res=false;\r\n                        }\r\n                    }\r\n                    else {//删除失败\r\n                        res = false;\r\n                    }\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<Teacher> viewTeachers(String abledMajor) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            res = TeacherDao.searchTeacher(\"abledMajor\",abledMajor);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> viewAllLessons() {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> viewSpecificLessons(String field,Object value) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search(field, value);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addGrade(String studentID, String innerID, Integer grade) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.addGrade(studentID, innerID, grade);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean delete(String deleteID) {\r\n        boolean res=false;\r\n        List<Lesson> lessons=null;\r\n        try {\r\n            lessons=LessonDao.search(\"lessonID\",deleteID);\r\n            if(lessons.isEmpty())//没有这门课\r\n                res=false;\r\n            else for(Lesson lesson:lessons){\r\n                res= deleteone(lesson.getInnerID());\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteone(String deleteoneID) {\r\n        boolean res;\r\n        List<Lesson> lessons=null;\r\n        try {\r\n            lessons=LessonDao.search(\"innerID\",deleteoneID);\r\n            if(lessons.isEmpty())//没有这门课\r\n                res=false;\r\n            else{\r\n                //先执行老师退课函数\r\n                //res=老师退课函数(lessons.get(0).getTeacherID());\r\n                //if(!res)return res;\r\n                //再执行学生退课函数\r\n                List<String> data = null;\r\n                data=LessonDao.searchStudent(deleteoneID);\r\n                for(String student:data){\r\n                    res= LessonDao.returnLesson(student,deleteoneID);\r\n                    if(!res)return res;\r\n                }\r\n                //再执行删除考试函数\r\n                res=ExamDao.deleteExam(deleteoneID);\r\n                if(!res)return res;\r\n                //再执行删除课程函数\r\n                res=LessonDao.deleteLesson(deleteoneID);\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> searchMine(String studentID) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.searchMine(studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> getTeacher(String lessonID) {\r\n        List<Student> res = null;\r\n        List<Lesson>data=null;\r\n        List<Student> tmp = null;\r\n        try {\r\n            data=LessonDao.search(\"lessonID\",lessonID);\r\n            for(Lesson lesson:data){\r\n                tmp=getSpecificTeacher(lesson.getInnerID());\r\n                for(Student student:tmp){\r\n                    res.add(student);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> getSpecificTeacher(String innerID) {\r\n        List<Student> res = null;\r\n        List<String>data=null;\r\n        List<Student> tmp = null;\r\n        try {\r\n            data=LessonDao.searchStudent(innerID);\r\n            for(String student:data){\r\n                tmp=StudentDao.search(\"studentID\",student);\r\n                if(!tmp.isEmpty())res.add(tmp.get(0));\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Student> searchStudent(String studentID) {\r\n        List<Student> res = null;\r\n        try {\r\n            res=StudentDao.search(\"studentID\", studentID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Teacher> searchTeacher(String teacherID) {\r\n        List<Teacher> res = null;\r\n        try {\r\n            res=TeacherDao.searchTeacher(\"teacherID\", teacherID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public String judgeLesson(String studentID,String innerID) {\r\n        String res;\r\n        try {\r\n            switch(LessonDao.judgeLesson(studentID,innerID)){\r\n                case 0:\r\n                    res= \"Selected\";//已选\r\n                    break;\r\n                case 1:\r\n                    res=\"full\";//已满\r\n                    break;\r\n                case 2:\r\n                    res=\"conflict\";//冲突\r\n                    break;\r\n                case 3:\r\n                    res=\"Optional\";//可选\r\n                    break;\r\n                default:\r\n                    res=\"NO\";//错误\r\n                    break;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return \"NO\";\r\n        }\r\n        return res;\r\n    }\r\n    public boolean returnLesson(String studentID,String innerID) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.returnLesson(studentID, innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean selectLesson(String studentID,String innerID) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.selectLesson(studentID, innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addTeacher(Teacher user) {\r\n        boolean res;\r\n        List<Teacher> teachers = null;\r\n        try {\r\n            teachers = TeacherDao.searchTeacher(\"teacherID\", user.getTeacherID());\r\n            if(!UserDao.search(user.getTeacherID())) {\r\n                //用户管理没有这个ID\r\n                res = false;\r\n            }\r\n            else if(teachers.isEmpty()) {\r\n                //没有对应数据\r\n                //视为添加\r\n                res = TeacherDao.addTeacher(user);\r\n            }\r\n            else if(!TeacherDao.deleteTeacher(user.getTeacherID())) {//视为修改\r\n                //删除信息失败\r\n                res = false;\r\n            }\r\n            else {\r\n                //删除信息成功\r\n                res = TeacherDao.addTeacher(user);\r\n                if(!res) TeacherDao.addTeacher(teachers.get(0));//添加失败，恢复\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/service/LessonService.java b/src/com/vcampus/server/service/LessonService.java
--- a/src/com/vcampus/server/service/LessonService.java	(revision 454a08e000c60dbb0354443bdfec887233018516)
+++ b/src/com/vcampus/server/service/LessonService.java	(date 1661308207932)
@@ -1,6 +1,7 @@
 package com.vcampus.server.service;
 
 import com.vcampus.dao.*;
+import com.vcampus.dao.utils.ClassTable;
 import com.vcampus.pojo.Lesson;
 import com.vcampus.pojo.Student;
 import com.vcampus.pojo.Teacher;
@@ -86,6 +87,24 @@
         }
         return res;
     }
+    public String showTecherTime(String teacherID) {
+        String time=null;
+        try {
+            String res = TeacherDao.getLessonTable(teacherID);
+            String[] tmp = res.split(",");//根据，切分字符串
+            List<Teacher>teacher=TeacherDao.searchTeacher("teacherID",teacherID);
+            if(teacher.isEmpty())return null;
+            List<Integer>Liketime= ClassTable.getTimeIndex(teacher.get(0).getTime());
+            for(Integer liketime:Liketime){
+                if(tmp[liketime].equals("0"))//如果非偏好时间没有选课，则将其变为1
+                    tmp[liketime]="1";
+            }
+            time = String.join(",",tmp);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return time;
+    }
     public List<Lesson> viewAllLessons() {
         List<Lesson> res = null;
         try {
Index: src/com/vcampus/server/controller/TestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.pojo.Exam;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.server.service.TestService;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class TestController implements Controller{\r\n\r\n    @Override\r\n    public Message check(Message msg){\r\n        TestService service = new TestService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\":\r\n                //添加考试信息,基于内部ID\r\n                //传入exam的类\r\n                Exam exam1 = gson.fromJson(msg.getData(), Exam.class);\r\n                if(service.addExam(exam1)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"postall\":\r\n                //添加考试信息，基于课程ID\r\n                //传入exam的类,此时innnerID传课程ID\r\n                Exam exam2 = gson.fromJson(msg.getData(), Exam.class);\r\n                if(service.addAllExam(exam2)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"delete\":\r\n                //删除考试\r\n                //输入内部ID\r\n                String innerID=msg.getData();\r\n                if(service.deleteExam(innerID)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"deleteall\":\r\n                //删除考试\r\n                //输入课程ID\r\n                String lessonID=msg.getData();\r\n                if(service.deleteAllExam(lessonID)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case\"addGrade\"://添加成绩\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/TestController.java b/src/com/vcampus/server/controller/TestController.java
--- a/src/com/vcampus/server/controller/TestController.java	(revision 454a08e000c60dbb0354443bdfec887233018516)
+++ b/src/com/vcampus/server/controller/TestController.java	(date 1661308207939)
@@ -39,8 +39,27 @@
                 String lessonID=msg.getData();
                 if(service.deleteAllExam(lessonID)) return new Message("200", "{res: 'OK'}");
                 else return new Message("200", "{res: 'NO'}");
-
-            case"addGrade"://添加成绩
+            case "showstudent":
+                //学生查看自己安排的考试
+                //输入学生ID
+                String studentID = msg.getData();
+                HashMap<String, Object> map1 = new HashMap<>();
+                map1.put("res", service.searchMyExamForStudent(studentID));
+                return new Message("200", gson.toJson(map1));
+            case "showteacher":
+                //老师查看自己监考的考试
+                //输入老师ID
+                String teacherID = msg.getData();
+                HashMap<String, Object> map2= new HashMap<>();
+                map2.put("res", service.searchMyExamForTeacher(teacherID));
+                return new Message("200", gson.toJson(map2));
+            case"showmyteacher":
+                //显示老师上的课的考试
+                //输入老师ID
+                String myteacherID = msg.getData();
+                HashMap<String, Object> map3= new HashMap<>();
+                map3.put("res", service.searchMyTeacherExam(myteacherID));
+                return new Message("200", gson.toJson(map3));
             default:
                 return new Message("404", "{res: 'Wrong Request!'}");
         }
Index: src/com/vcampus/server/service/TestService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.service;\r\n\r\nimport com.vcampus.dao.ExamDao;\r\nimport com.vcampus.dao.LessonDao;\r\nimport com.vcampus.pojo.Exam;\r\nimport com.vcampus.pojo.Lesson;\r\n\r\nimport java.util.List;\r\n\r\npublic class TestService implements Service{\r\n    public boolean addExam(Exam user) {\r\n        boolean res;\r\n        List<Exam>exam=null;\r\n        try {\r\n            exam=ExamDao.searchExam(user.getinnerID());\r\n            if(exam.isEmpty()){\r\n                //此时为添加考试\r\n                res= ExamDao.addExam(user);\r\n            }\r\n            else{\r\n                //此时为修改考试\r\n                if(ExamDao.deleteExam(user.getinnerID())){\r\n                    //删除之前考试成功\r\n                    res=ExamDao.addExam(user);\r\n                    if(!res){\r\n                        //添加失败，恢复\r\n                        ExamDao.addExam(exam.get(0));\r\n                    }\r\n                }\r\n                else res=false;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addAllExam(Exam user) {\r\n        //首先，将user的innerID取出，视为课程ID\r\n        //通过课程ID查到innerID\r\n        //依次构建Exam类\r\n        //依次添加\r\n        boolean res=false;\r\n        List<Lesson> data = null;\r\n        try {\r\n            data= LessonDao.search(\"lessonID\",user.getinnerID());\r\n            for(Lesson lesson:data){\r\n                Exam exam = new Exam(lesson.getInnerID(), user.getTeacherID(),user.getTime());\r\n                res= addExam(exam);\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteExam(String innerID) {\r\n        boolean res=false;\r\n        try {\r\n            res= ExamDao.deleteExam(innerID);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean deleteAllExam(String lessonID) {\r\n        //通过课程ID查到innerID\r\n        //依次删除\r\n        boolean res=false;\r\n        List<Lesson> data = null;\r\n        try {\r\n            data= LessonDao.search(\"lessonID\",lessonID);\r\n            for(Lesson lesson:data){\r\n                res= ExamDao.deleteExam(lesson.getInnerID());\r\n                if(!res)return res;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/service/TestService.java b/src/com/vcampus/server/service/TestService.java
--- a/src/com/vcampus/server/service/TestService.java	(revision 454a08e000c60dbb0354443bdfec887233018516)
+++ b/src/com/vcampus/server/service/TestService.java	(date 1661308207947)
@@ -82,4 +82,36 @@
         }
         return res;
     }
+    public List<Exam> searchMyExamForStudent(String studentID) {
+        List<Exam> res = null;
+        try {
+            res = ExamDao.searchMyExamForStudent(studentID);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
+    public List<Exam> searchMyExamForTeacher(String teacherID) {
+        List<Exam> res = null;
+        try {
+            res = ExamDao.searchMyExamForStudent(teacherID);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
+    public List<Exam> searchMyTeacherExam(String teacherID) {
+        List<Exam> res = null;
+        List<Lesson>tmp=null;
+        try {
+            tmp=LessonDao.search("teacherID",teacherID);
+            for(Lesson lesson:tmp){
+                List<Exam> temp=ExamDao.searchExam(lesson.getInnerID());
+                if(!temp.isEmpty())res.add(temp.get(0));
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"增加了借书时间\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DFN8UqGaWdtufeJ3QLOdvtrWZL\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"foldersAlwaysOnTop\" value=\"false\" />\r\n    <option name=\"showModules\" value=\"false\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Code/JavaWebCode/Vcampus/src&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;File.Encoding&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;ChangesTree.GroupingKeys&quot;: [\r\n      &quot;directory&quot;,\r\n      &quot;module&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\\src\" />\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.vcampus.client.login\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.LibraryDao.test\">\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.client.Client\" />\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.client.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BaseDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.BaseDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ClassTable.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao.utils\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.utils.ClassTable\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LessonDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.LessonDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LibraryDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.LibraryDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.LibraryDao.test\" />\r\n        <item itemvalue=\"Application.Client\" />\r\n        <item itemvalue=\"JUnit.LessonDao.test\" />\r\n        <item itemvalue=\"JUnit.BaseDao.test\" />\r\n        <item itemvalue=\"JUnit.ClassTable.test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"\" />\r\n      <created>1660290718338</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1660290718338</updated>\r\n      <workItem from=\"1660290720744\" duration=\"7006000\" />\r\n      <workItem from=\"1660394444650\" duration=\"60000\" />\r\n      <workItem from=\"1660394516873\" duration=\"56000\" />\r\n      <workItem from=\"1660394584644\" duration=\"9000\" />\r\n      <workItem from=\"1660395297646\" duration=\"18000\" />\r\n      <workItem from=\"1660397164596\" duration=\"38000\" />\r\n      <workItem from=\"1660397307971\" duration=\"4358000\" />\r\n      <workItem from=\"1660403234776\" duration=\"303000\" />\r\n      <workItem from=\"1660454140324\" duration=\"96000\" />\r\n      <workItem from=\"1660455383694\" duration=\"9368000\" />\r\n      <workItem from=\"1660546281143\" duration=\"210000\" />\r\n      <workItem from=\"1660553294493\" duration=\"5398000\" />\r\n      <workItem from=\"1660563636857\" duration=\"2164000\" />\r\n      <workItem from=\"1660619044349\" duration=\"4132000\" />\r\n      <workItem from=\"1660637701493\" duration=\"2215000\" />\r\n      <workItem from=\"1660639997270\" duration=\"5427000\" />\r\n      <workItem from=\"1660648925845\" duration=\"884000\" />\r\n      <workItem from=\"1660694384311\" duration=\"5422000\" />\r\n      <workItem from=\"1660745486230\" duration=\"183000\" />\r\n      <workItem from=\"1660745889106\" duration=\"473000\" />\r\n      <workItem from=\"1660815934556\" duration=\"2473000\" />\r\n      <workItem from=\"1660831786373\" duration=\"1983000\" />\r\n      <workItem from=\"1660888580099\" duration=\"3413000\" />\r\n      <workItem from=\"1660918724497\" duration=\"1503000\" />\r\n      <workItem from=\"1660922180929\" duration=\"80000\" />\r\n      <workItem from=\"1660969405563\" duration=\"1904000\" />\r\n      <workItem from=\"1660975764803\" duration=\"1456000\" />\r\n      <workItem from=\"1660977503920\" duration=\"596000\" />\r\n      <workItem from=\"1660991092243\" duration=\"1569000\" />\r\n      <workItem from=\"1660993852382\" duration=\"3050000\" />\r\n      <workItem from=\"1661001183994\" duration=\"134000\" />\r\n      <workItem from=\"1661001398741\" duration=\"2035000\" />\r\n      <workItem from=\"1661047449565\" duration=\"70000\" />\r\n      <workItem from=\"1661048117757\" duration=\"4529000\" />\r\n      <workItem from=\"1661073362879\" duration=\"595000\" />\r\n      <workItem from=\"1661147223714\" duration=\"78000\" />\r\n      <workItem from=\"1661147390790\" duration=\"5933000\" />\r\n      <workItem from=\"1661299612812\" duration=\"6394000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"初步写了登录注册\">\r\n      <created>1660298515554</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660298515554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"写了一个方法把map转为bean对象\">\r\n      <created>1660401643513</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660401643513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"实现可序列化接口\">\r\n      <created>1660554878384</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660554878384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"对注册添加了类型验证\">\r\n      <created>1660555737524</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660555737524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\">\r\n      <created>1660567403654</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660567403654</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\">\r\n      <created>1660648795402</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660648795402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\">\r\n      <created>1660649808298</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660649808298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\">\r\n      <created>1660700337585</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660700337585</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"在lessonDao层添加了增加课程的类\">\r\n      <created>1660745584712</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660745584712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"修改了UserDao层的错误，但service和controller仍存在错误\">\r\n      <created>1660746328997</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660746328997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"给Student添加了image对象\">\r\n      <created>1660820650348</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660820650348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"添加了exam类，初步写了examDao层\">\r\n      <created>1660833772622</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660833772623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"增强了student，加入了民族信息；同时推进了部分examDao层\">\r\n      <created>1660890949742</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660890949742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"baseDao增加了一些公共函数\">\r\n      <created>1660898810557</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660898810557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"继续完善了一些类\">\r\n      <created>1660902650513</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660902650513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"增加了选课判断函数\">\r\n      <created>1660903186114</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660903186114</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"出bug了，测试下\">\r\n      <created>1660919678034</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660919678034</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"初步建立了课表，好难啊\">\r\n      <created>1661003442415</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661003442415</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"修改了student类\">\r\n      <created>1661048787851</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661048787851</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"在lessonDao里添加了几个函数\">\r\n      <created>1661051089899</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661051089899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"对teacherDao层，增加了返回老师课表的功能\">\r\n      <created>1661300170937</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661300170937</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"增加了借书时间\">\r\n      <created>1661302879739</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661302879739</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"23\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"初步写了登录注册\" />\r\n    <MESSAGE value=\"写了一个方法把map转为bean对象\" />\r\n    <MESSAGE value=\"实现可序列化接口\" />\r\n    <MESSAGE value=\"对注册添加了类型验证\" />\r\n    <MESSAGE value=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\" />\r\n    <MESSAGE value=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\" />\r\n    <MESSAGE value=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\" />\r\n    <MESSAGE value=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\" />\r\n    <MESSAGE value=\"在lessonDao层添加了增加课程的类\" />\r\n    <MESSAGE value=\"修改了UserDao层的错误，但service和controller仍存在错误\" />\r\n    <MESSAGE value=\"给Student添加了image对象\" />\r\n    <MESSAGE value=\"添加了exam类，初步写了examDao层\" />\r\n    <MESSAGE value=\"增强了student，加入了民族信息；同时推进了部分examDao层\" />\r\n    <MESSAGE value=\"baseDao增加了一些公共函数\" />\r\n    <MESSAGE value=\"继续完善了一些类\" />\r\n    <MESSAGE value=\"增加了选课判断函数\" />\r\n    <MESSAGE value=\"出bug了，测试下\" />\r\n    <MESSAGE value=\"初步建立了课表，好难啊\" />\r\n    <MESSAGE value=\"修改了student类\" />\r\n    <MESSAGE value=\"在lessonDao里添加了几个函数\" />\r\n    <MESSAGE value=\"对teacherDao层，增加了返回老师课表的功能\" />\r\n    <MESSAGE value=\"增加了借书时间\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"增加了借书时间\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 454a08e000c60dbb0354443bdfec887233018516)
+++ b/.idea/workspace.xml	(date 1661308208250)
@@ -1,9 +1,27 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="15435ea3-daf0-45be-876d-97d3668b8c59" name="Changes" comment="增加了借书时间">
+    <list default="true" id="15435ea3-daf0-45be-876d-97d3668b8c59" name="Changes" comment="添加了teacher的选课退课操作,更新了examDao层">
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources/16ab1209-50a4-4f5c-abc4-19d56b62a9e5.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_8_16_16_34_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_8_16_16_34__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-16_19_52___Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-17_10_31___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-17_10_31___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-17_11_09___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-17_11_09___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-17_9_52___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-17_9_52___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_13_57___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_13_57___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_36___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_36___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_54___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_14_54___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_17_56___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-19_17_56___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-21_10_05___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-21_10_05___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-21_12_04___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-21_12_04___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-21_12_57___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-21_12_57___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-22_17_22___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-22_17_22___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/_2022-08-22_17_27___Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/_2022-08-22_17_27___Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/在进行更新之前于_2022-08-16_19_52_取消提交了变更_[Changes]/shelved.patch" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/dao/TeacherDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/dao/TeacherDao.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,20 +83,7 @@
       <recent name="com.vcampus.client.login" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.LibraryDao.test">
-    <configuration name="Client" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.client.Client" />
-      <module name="Vcampus" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="com.vcampus.client.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
+  <component name="RunManager" selected="JUnit.LessonDao.test">
     <configuration name="BaseDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
@@ -143,13 +148,29 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="TimeTest.TimeTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="Vcampus" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.vcampus.test.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.vcampus.test" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.test.TimeTest" />
+      <option name="METHOD_NAME" value="TimeTest" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.LibraryDao.test" />
-        <item itemvalue="Application.Client" />
         <item itemvalue="JUnit.LessonDao.test" />
         <item itemvalue="JUnit.BaseDao.test" />
+        <item itemvalue="JUnit.LibraryDao.test" />
         <item itemvalue="JUnit.ClassTable.test" />
+        <item itemvalue="JUnit.TimeTest.TimeTest" />
       </list>
     </recent_temporary>
   </component>
@@ -198,7 +219,7 @@
       <workItem from="1661073362879" duration="595000" />
       <workItem from="1661147223714" duration="78000" />
       <workItem from="1661147390790" duration="5933000" />
-      <workItem from="1661299612812" duration="6394000" />
+      <workItem from="1661299612812" duration="345000" />
     </task>
     <task id="LOCAL-00001" summary="初步写了登录注册">
       <created>1660298515554</created>
@@ -340,21 +361,7 @@
       <option name="project" value="LOCAL" />
       <updated>1661051089899</updated>
     </task>
-    <task id="LOCAL-00021" summary="对teacherDao层，增加了返回老师课表的功能">
-      <created>1661300170937</created>
-      <option name="number" value="00021" />
-      <option name="presentableId" value="LOCAL-00021" />
-      <option name="project" value="LOCAL" />
-      <updated>1661300170937</updated>
-    </task>
-    <task id="LOCAL-00022" summary="增加了借书时间">
-      <created>1661302879739</created>
-      <option name="number" value="00022" />
-      <option name="presentableId" value="LOCAL-00022" />
-      <option name="project" value="LOCAL" />
-      <updated>1661302879739</updated>
-    </task>
-    <option name="localTasksCounter" value="23" />
+    <option name="localTasksCounter" value="21" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -423,9 +430,7 @@
     <MESSAGE value="初步建立了课表，好难啊" />
     <MESSAGE value="修改了student类" />
     <MESSAGE value="在lessonDao里添加了几个函数" />
-    <MESSAGE value="对teacherDao层，增加了返回老师课表的功能" />
-    <MESSAGE value="增加了借书时间" />
-    <option name="LAST_COMMIT_MESSAGE" value="增加了借书时间" />
+    <option name="LAST_COMMIT_MESSAGE" value="在lessonDao里添加了几个函数" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
