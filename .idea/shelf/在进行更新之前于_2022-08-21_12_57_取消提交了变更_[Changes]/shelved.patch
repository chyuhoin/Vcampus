Index: src/com/vcampus/server/controller/LessonController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.server.service.Service;\r\nimport com.vcampus.server.service.LessonService;\r\nimport com.google.gson.*;\r\nimport com.vcampus.server.service.StudentService;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class LessonController implements Controller{\r\n    @Override\r\n    public Message check(Message msg){\r\n        LessonService service = new LessonService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\":\r\n                //添加课程信息\r\n                //输入：课程ID、课程名称、学院、专业、是否有考试\r\n                //此时创建一个其他数据为空的“空课程”\r\n                //只有数据库中没有对应的课程ID才可以创建空课程\r\n                Lesson lesson = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addLesson(lesson)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"postone\":\r\n                //添加对应课程的老师\r\n                //输入课程所需的所有数据，创建（内部编号为课程ID+教师ID）\r\n                //如果没有对应课程ID，报错\r\n                //如果有对应课程ID且为“空课程”,视为修改空课程\r\n                //如果有对应课程ID且无空课程，则创建课程\r\n                //如果有对应内部ID，则视为修改\r\n                Lesson lessonone = gson.fromJson(msg.getData(), Lesson.class);\r\n                if(service.addOneLesson(lessonone)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            case \"showteacher\":\r\n                //添加对应课程的老师时显示所有可选的老师\r\n                //只要专业满足即可选择\r\n            case\"showtime\":\r\n                //输入老师ID，返回所有不可选的时间\r\n                //不可选的时间有：非偏好时间、上课时间\r\n            case \"delete\":\r\n                //删除课程，输入课程ID\r\n                //输入课程ID,删除对应课程ID的所有课程,删除对应的考试信息\r\n            case \"deleteone\":\r\n                //删除对应老师教授的特定课程\r\n                //删除对应老师的考试信息\r\n            case \"get\":\r\n                //显示所有课程\r\n                HashMap<String, Object> map1 = new HashMap<>();\r\n                map1.put(\"res\", service.viewAllLessons());\r\n                return new Message(\"200\", gson.toJson(map1));\r\n            case \"getone\":\r\n                //显示某一指标的课程 如“专业:计算机” “指标”+“:”+“数据”\r\n                String data = msg.getData();\r\n                Map<String, String> map = gson.fromJson(data, new TypeToken<HashMap<String, String>>() {}.getType());\r\n                HashMap<String, Object> map2 = new HashMap<>();\r\n                Set<Lesson> lessonSet = new HashSet<>();\r\n                for (Map.Entry<String, String> entry : map.entrySet()) {\r\n                    lessonSet.addAll(service.viewSpecificLessons(entry.getKey(), entry.getValue()));\r\n                }\r\n                map2.put(\"res\", lessonSet);\r\n                return new Message(\"200\", gson.toJson(map2));\r\n            case \"set\":\r\n                //修改课程信息\r\n            case\"getstudent\":\r\n                //显示对应学生选的课 输入学生ID\r\n            case \"getteacher\":\r\n                //显示选择对应课程的学生 输入课程ID\r\n            case \"show\":\r\n                //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业\r\n                //               老师：姓名、身份、ID、可选专业、偏好时间\r\n            case \"setteacher\":\r\n                //修改老师的可选专业与偏好时间\r\n            case \"arrange\":\r\n                //自动排课，输入课程ID\r\n            case \"addgrade\":\r\n                //添加成绩\r\n                //输入学生ID，内部ID，成绩，用“,”隔开\r\n                String oldStr = msg.getData();\r\n                String[] strs = oldStr.split(\",\");//根据，切分字符串\r\n                if(service.addGrade(strs[0],strs[1],Integer.parseInt(strs[2])))\r\n                    return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n\r\n            case \"showlesson\":\r\n                //显示课程的状态：可选、已选、已满、时间冲突\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/LessonController.java b/src/com/vcampus/server/controller/LessonController.java
--- a/src/com/vcampus/server/controller/LessonController.java	(revision 8cb461627fa7f8c3728da9a42775e6d68499c9da)
+++ b/src/com/vcampus/server/controller/LessonController.java	(date 1661054682346)
@@ -51,6 +51,11 @@
             case "deleteone":
                 //删除对应老师教授的特定课程
                 //删除对应老师的考试信息
+                //输入内部编号
+                String deleteoneID = msg.getData();//内部编号
+                if (service.deleteone(deleteoneID)) return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+
             case "get":
                 //显示所有课程
                 HashMap<String, Object> map1 = new HashMap<>();
@@ -69,13 +74,34 @@
                 return new Message("200", gson.toJson(map2));
             case "set":
                 //修改课程信息
+                //传入一个lesson的类
+                //具体操作为删除对应内部ID的数据，再把此数据添加
+                //如果没有对应内部ID的数据则操作失败
+                Lesson lessonset = gson.fromJson(msg.getData(), Lesson.class);
+                if(service.setLesson(lessonset)) return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
             case"getstudent":
                 //显示对应学生选的课 输入学生ID
+                String studentID = msg.getData();
+
+                HashMap<String, Object> map3 = new HashMap<>();
+                map3.put("res", service.searchMine(studentID));
+                return new Message("200", gson.toJson(map3));
             case "getteacher":
                 //显示选择对应课程的学生 输入课程ID
-            case "show":
-                //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业
+            case "showstatusstudent":
+                //输入ID，显示内容：*学生：姓名、身份（1--学生 2--老师）、ID、专业
                 //               老师：姓名、身份、ID、可选专业、偏好时间
+                //返回一个学生的类的list
+                String studentID1 = msg.getData();
+                HashMap<String, Object> map4 = new HashMap<>();
+                map4.put("res", service.searchStudent(studentID1));
+                return new Message("200", gson.toJson(map4));
+
+            case "showstatussteacher":
+                //输入ID，显示内容：学生：姓名、身份（1--学生 2--老师）、ID、专业
+                //               *老师：姓名、身份、ID、可选专业、偏好时间
+                //返回一个老师的类的list
             case "setteacher":
                 //修改老师的可选专业与偏好时间
             case "arrange":
@@ -83,14 +109,36 @@
             case "addgrade":
                 //添加成绩
                 //输入学生ID，内部ID，成绩，用“,”隔开
-                String oldStr = msg.getData();
-                String[] strs = oldStr.split(",");//根据，切分字符串
-                if(service.addGrade(strs[0],strs[1],Integer.parseInt(strs[2])))
+                String oldStr1 = msg.getData();
+                String[] strs1 = oldStr1.split(",");//根据，切分字符串
+                if(service.addGrade(strs1[0],strs1[1],Integer.parseInt(strs1[2])))
                     return new Message("200", "{res: 'OK'}");
                 else return new Message("200", "{res: 'NO'}");
 
             case "showlesson":
                 //显示课程的状态：可选、已选、已满、时间冲突
+                //输入学生ID与课程号 用","隔开
+                String oldStr2 = msg.getData();
+                String[] strs2 = oldStr2.split(",");//根据，切分字符串
+                String data1=service.judgeLesson(strs2[0],strs2[1]);
+                return new Message("200", "{res: "+"'"+data1+"'}");
+            case "selectlesson":
+                //学生选课
+                //输入学生ID与课程号 用","隔开
+                String oldStr3 = msg.getData();
+                String[] strs3 = oldStr3.split(",");//根据，切分字符串
+                if(service.selectLesson(strs3[0],strs3[1]))
+                    return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+            case "returnlesson":
+                //学生退课
+                //输入学生ID与课程号 用","隔开
+                String oldStr4 = msg.getData();
+                String[] strs4 = oldStr4.split(",");//根据，切分字符串
+                if(service.returnLesson(strs4[0],strs4[1]))
+                    return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+
             default:
                 return new Message("404", "{res: 'Wrong Request!'}");
         }
Index: src/com/vcampus/server/service/LessonService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.service;\r\n\r\nimport com.vcampus.dao.LessonDao;\r\nimport com.vcampus.dao.StudentDao;\r\nimport com.vcampus.dao.UserDao;\r\nimport com.vcampus.pojo.Lesson;\r\nimport com.vcampus.pojo.Student;\r\n\r\nimport java.util.List;\r\npublic class LessonService implements Service{\r\n    public boolean addLesson(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(!LessonDao.search(\"lessonID\",user.getLessonID()).isEmpty())//已经有这个课程ID\r\n                res=false;\r\n            else res=LessonDao.addLesson(user);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addOneLesson(Lesson user) {\r\n        boolean res;\r\n        try {\r\n            if(LessonDao.search(\"lessonID\",user.getLessonID()).isEmpty())//没有对应课程ID\r\n                res=false;\r\n            else if(!LessonDao.search(\"innerID\",null).isEmpty())//此时为空课程\r\n                //if(删除课程（课程ID）)\r\n                res=LessonDao.addLesson(user);\r\n                //else res=false;\r\n            else //此时已经没有空课程\r\n            if(LessonDao.search(\"innerID\",user.getInnerID()).isEmpty())//此时为添加课程\r\n                res=LessonDao.addLesson(user);\r\n            else //if(删除课程（内部ID）)\r\n                res=LessonDao.addLesson(user);\r\n                //else res=false;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> viewAllLessons() {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public List<Lesson> viewSpecificLessons(String field,Object value) {\r\n        List<Lesson> res = null;\r\n        try {\r\n            res = LessonDao.search(field, value);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return res;\r\n    }\r\n    public boolean addGrade(String studentID, String innerID, Integer grade) {\r\n        boolean res;\r\n        try {\r\n            res=LessonDao.addGrade(studentID, innerID, grade);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/service/LessonService.java b/src/com/vcampus/server/service/LessonService.java
--- a/src/com/vcampus/server/service/LessonService.java	(revision 8cb461627fa7f8c3728da9a42775e6d68499c9da)
+++ b/src/com/vcampus/server/service/LessonService.java	(date 1661054818641)
@@ -69,4 +69,92 @@
         }
         return res;
     }
+    public boolean deleteone(String deleteoneID) {
+        boolean res;
+        try {
+            res=LessonDao.deleteLesson(deleteoneID);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
+    public boolean setLesson(Lesson user) {
+        boolean res;
+        try {
+            if(LessonDao.search("innerID",user.getLessonID()).isEmpty())//没有这个内部ID
+                res=false;
+            else if(LessonDao.deleteLesson(user.getInnerID()))//删除成功
+                res=LessonDao.addLesson(user);//添加课程
+            else res=false;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
+    public List<Lesson> searchMine(String studentID) {
+        List<Lesson> res = null;
+        try {
+            res = LessonDao.searchMine(studentID);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
+    public List<Student> searchStudent(String studentID) {
+        List<Student> res = null;
+        try {
+            res=StudentDao.search("studentID", studentID);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
+    public String judgeLesson(String studentID,String innerID) {
+        String res;
+        try {
+            switch(LessonDao.judgeLesson(studentID,innerID)){
+                case 0:
+                    res= "Selected";//已选
+                    break;
+                case 1:
+                    res="full";//已满
+                    break;
+                case 2:
+                    res="conflict";//冲突
+                    break;
+                case 3:
+                    res="Optional";//可选
+                    break;
+                default:
+                    res="NO";//错误
+                    break;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            return "NO";
+        }
+        return res;
+    }
+    public boolean returnLesson(String studentID,String innerID) {
+        boolean res;
+        try {
+            res=LessonDao.returnLesson(studentID, innerID);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
+    public boolean selectLesson(String studentID,String innerID) {
+        boolean res;
+        try {
+            res=LessonDao.selectLesson(studentID, innerID);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
 }
Index: src/com/vcampus/server/controller/TestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.server.service.TestService;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class TestController implements Controller{\r\n\r\n    @Override\r\n    public Message check(Message msg){\r\n        TestService service = new TestService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\"://添加考试信息,基于内部ID\r\n            case \"delete\"://删除考试，输入课程ID\r\n            case\"set\"://修改考试信息\r\n            case\"addGrade\"://添加成绩\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/TestController.java b/src/com/vcampus/server/controller/TestController.java
--- a/src/com/vcampus/server/controller/TestController.java	(revision 8cb461627fa7f8c3728da9a42775e6d68499c9da)
+++ b/src/com/vcampus/server/controller/TestController.java	(date 1661057543354)
@@ -2,6 +2,8 @@
 
 import com.google.gson.Gson;
 import com.vcampus.net.Message;
+import com.vcampus.pojo.Exam;
+import com.vcampus.pojo.Lesson;
 import com.vcampus.server.service.TestService;
 
 import java.util.HashMap;
@@ -13,8 +15,31 @@
         TestService service = new TestService();
         Gson gson = new Gson();
         switch (msg.getOperation()) {
-            case "post"://添加考试信息,基于内部ID
-            case "delete"://删除考试，输入课程ID
+            case "post":
+                //添加考试信息,基于内部ID
+                //传入exam的类
+                Exam exam1 = gson.fromJson(msg.getData(), Exam.class);
+                if(service.addExam(exam1)) return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+            case "postall":
+                //添加考试信息，基于课程ID
+                //传入exam的类,此时innnerID传课程ID
+                Exam exam2 = gson.fromJson(msg.getData(), Exam.class);
+                if(service.addAllExam(exam2)) return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+            case "delete":
+                //删除考试
+                //输入内部ID
+                String innerID=msg.getData();
+                if(service.deleteExam(innerID)) return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+            case "deleteall":
+                //删除考试
+                //输入课程ID
+                String lessonID=msg.getData();
+                if(service.deleteAllExam(lessonID)) return new Message("200", "{res: 'OK'}");
+                else return new Message("200", "{res: 'NO'}");
+
             case"set"://修改考试信息
             case"addGrade"://添加成绩
             default:
Index: src/com/vcampus/server/service/TestService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.service;\r\n\r\npublic class TestService implements Service{\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/service/TestService.java b/src/com/vcampus/server/service/TestService.java
--- a/src/com/vcampus/server/service/TestService.java	(revision 8cb461627fa7f8c3728da9a42775e6d68499c9da)
+++ b/src/com/vcampus/server/service/TestService.java	(date 1661057811303)
@@ -1,5 +1,68 @@
 package com.vcampus.server.service;
 
+import com.vcampus.dao.ExamDao;
+import com.vcampus.dao.LessonDao;
+import com.vcampus.pojo.Exam;
+import com.vcampus.pojo.Lesson;
+
+import java.util.List;
+
 public class TestService implements Service{
-
+    public boolean addExam(Exam user) {
+        boolean res;
+        try {
+            res= ExamDao.addExam(user);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
+    public boolean addAllExam(Exam user) {
+        //首先，将user的innerID取出，视为课程ID
+        //通过课程ID查到innerID
+        //依次构建Exam类
+        //依次添加
+        boolean res=false;
+        List<Lesson> data = null;
+        try {
+            data= LessonDao.search("lessonID",user.getinnerID());
+            for(Lesson lesson:data){
+                Exam exam = new Exam(lesson.getInnerID(), user.getTeacherID(),user.getTime());
+                res= ExamDao.addExam(exam);
+                if(!res)return res;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
+    public boolean deleteExam(String innerID) {
+        boolean res=false;
+        try {
+            res= ExamDao.deleteExam(innerID);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
+    public boolean deleteAllExam(String lessonID) {
+        //通过课程ID查到innerID
+        //依次删除
+        boolean res=false;
+        List<Lesson> data = null;
+        try {
+            data= LessonDao.search("lessonID",lessonID);
+            for(Lesson lesson:data){
+                res= ExamDao.deleteExam(lesson.getInnerID());
+                if(!res)return res;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return res;
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"出bug了，测试下\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/com/vcampus/dao/utils/ClassTable.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DFN8UqGaWdtufeJ3QLOdvtrWZL\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"foldersAlwaysOnTop\" value=\"false\" />\r\n    <option name=\"showModules\" value=\"false\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Code/JavaWebCode/Vcampus/src&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;File.Encoding&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;ChangesTree.GroupingKeys&quot;: [\r\n      &quot;directory&quot;,\r\n      &quot;module&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\\src\" />\r\n      <recent name=\"D:\\Code\\JavaWebCode\\Vcampus\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.vcampus.client.login\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"BaseDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.BaseDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ClassTable.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao.utils\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.utils.ClassTable\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StudentDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.StudentDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TeacherDao.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.dao.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.dao\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.dao.TeacherDao\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TimeTest.TimeTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Vcampus\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.vcampus.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.vcampus.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.vcampus.test.TimeTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"TimeTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.ClassTable.test\" />\r\n        <item itemvalue=\"JUnit.TimeTest.TimeTest\" />\r\n        <item itemvalue=\"JUnit.BaseDao.test\" />\r\n        <item itemvalue=\"JUnit.TeacherDao.test\" />\r\n        <item itemvalue=\"JUnit.StudentDao.test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"15435ea3-daf0-45be-876d-97d3668b8c59\" name=\"Changes\" comment=\"\" />\r\n      <created>1660290718338</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1660290718338</updated>\r\n      <workItem from=\"1660290720744\" duration=\"7006000\" />\r\n      <workItem from=\"1660394444650\" duration=\"60000\" />\r\n      <workItem from=\"1660394516873\" duration=\"56000\" />\r\n      <workItem from=\"1660394584644\" duration=\"9000\" />\r\n      <workItem from=\"1660395297646\" duration=\"18000\" />\r\n      <workItem from=\"1660397164596\" duration=\"38000\" />\r\n      <workItem from=\"1660397307971\" duration=\"4358000\" />\r\n      <workItem from=\"1660403234776\" duration=\"303000\" />\r\n      <workItem from=\"1660454140324\" duration=\"96000\" />\r\n      <workItem from=\"1660455383694\" duration=\"9368000\" />\r\n      <workItem from=\"1660546281143\" duration=\"210000\" />\r\n      <workItem from=\"1660553294493\" duration=\"5398000\" />\r\n      <workItem from=\"1660563636857\" duration=\"2164000\" />\r\n      <workItem from=\"1660619044349\" duration=\"4132000\" />\r\n      <workItem from=\"1660637701493\" duration=\"2215000\" />\r\n      <workItem from=\"1660639997270\" duration=\"5427000\" />\r\n      <workItem from=\"1660648925845\" duration=\"884000\" />\r\n      <workItem from=\"1660694384311\" duration=\"5422000\" />\r\n      <workItem from=\"1660745486230\" duration=\"183000\" />\r\n      <workItem from=\"1660745889106\" duration=\"473000\" />\r\n      <workItem from=\"1660815934556\" duration=\"2473000\" />\r\n      <workItem from=\"1660831786373\" duration=\"1983000\" />\r\n      <workItem from=\"1660888580099\" duration=\"3413000\" />\r\n      <workItem from=\"1660918724497\" duration=\"1503000\" />\r\n      <workItem from=\"1660922180929\" duration=\"80000\" />\r\n      <workItem from=\"1660969405563\" duration=\"1904000\" />\r\n      <workItem from=\"1660975764803\" duration=\"1456000\" />\r\n      <workItem from=\"1660977503920\" duration=\"596000\" />\r\n      <workItem from=\"1660991092243\" duration=\"1569000\" />\r\n      <workItem from=\"1660993852382\" duration=\"3050000\" />\r\n      <workItem from=\"1661001183994\" duration=\"134000\" />\r\n      <workItem from=\"1661001398741\" duration=\"1945000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"初步写了登录注册\">\r\n      <created>1660298515554</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660298515554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"写了一个方法把map转为bean对象\">\r\n      <created>1660401643513</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660401643513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"实现可序列化接口\">\r\n      <created>1660554878384</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660554878384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"对注册添加了类型验证\">\r\n      <created>1660555737524</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660555737524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\">\r\n      <created>1660567403654</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660567403654</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\">\r\n      <created>1660648795402</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660648795402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\">\r\n      <created>1660649808298</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660649808298</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\">\r\n      <created>1660700337585</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660700337585</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"在lessonDao层添加了增加课程的类\">\r\n      <created>1660745584712</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660745584712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"修改了UserDao层的错误，但service和controller仍存在错误\">\r\n      <created>1660746328997</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660746328997</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"给Student添加了image对象\">\r\n      <created>1660820650348</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660820650348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"添加了exam类，初步写了examDao层\">\r\n      <created>1660833772622</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660833772623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"增强了student，加入了民族信息；同时推进了部分examDao层\">\r\n      <created>1660890949742</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660890949742</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"baseDao增加了一些公共函数\">\r\n      <created>1660898810557</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660898810557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"继续完善了一些类\">\r\n      <created>1660902650513</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660902650513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"增加了选课判断函数\">\r\n      <created>1660903186114</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660903186114</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"出bug了，测试下\">\r\n      <created>1660919678034</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1660919678034</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"c229b710-18e0-4633-9ddc-e3541ee754eb\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"初步写了登录注册\" />\r\n    <MESSAGE value=\"写了一个方法把map转为bean对象\" />\r\n    <MESSAGE value=\"实现可序列化接口\" />\r\n    <MESSAGE value=\"对注册添加了类型验证\" />\r\n    <MESSAGE value=\"完成了studentDao层，暂时没有把照片添加进去，主要是照片的读取之类的需要特殊方法，我要再学习一下\" />\r\n    <MESSAGE value=\"这次初步写了libraryDao层，但引发了我一个关于数据库隔离的思考，这部分知识我还要好好学一下。目前为止我的Dao层都是静态方法，当查询的时候都是现获取的，这样的方法的弊端一个是效率问题，需要频繁开关，另一个问题则是数据库隔离的隐患。我正在考虑重写某些方法。\" />\r\n    <MESSAGE value=\"重写了下CRUD类中的方法，加入了一个connection参数。写了一个BaseDao，内部定义了一个连接，各个Dao类都继承了BaseDao。现在使用同一个connection进行操作了\" />\r\n    <MESSAGE value=\"为Book增加了字符串形式表示的图片，写了图片和字符串相互转化的类。&#10;修改了LibraryDao层，可以多个条件查询\" />\r\n    <MESSAGE value=\"在lessonDao层添加了增加课程的类\" />\r\n    <MESSAGE value=\"修改了UserDao层的错误，但service和controller仍存在错误\" />\r\n    <MESSAGE value=\"给Student添加了image对象\" />\r\n    <MESSAGE value=\"添加了exam类，初步写了examDao层\" />\r\n    <MESSAGE value=\"增强了student，加入了民族信息；同时推进了部分examDao层\" />\r\n    <MESSAGE value=\"baseDao增加了一些公共函数\" />\r\n    <MESSAGE value=\"继续完善了一些类\" />\r\n    <MESSAGE value=\"增加了选课判断函数\" />\r\n    <MESSAGE value=\"出bug了，测试下\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"出bug了，测试下\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8cb461627fa7f8c3728da9a42775e6d68499c9da)
+++ b/.idea/workspace.xml	(date 1661055669578)
@@ -1,10 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="15435ea3-daf0-45be-876d-97d3668b8c59" name="Changes" comment="出bug了，测试下">
-      <change afterPath="$PROJECT_DIR$/src/com/vcampus/dao/utils/ClassTable.java" afterDir="false" />
+    <list default="true" id="15435ea3-daf0-45be-876d-97d3668b8c59" name="Changes" comment="添加选课">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/dao/LessonDao.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/controller/LessonController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/controller/LessonController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/controller/StudentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/controller/StudentController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/controller/TestController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/controller/TestController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/service/LessonService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/service/LessonService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/vcampus/server/service/TestService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/vcampus/server/service/TestService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,7 +29,6 @@
       </GitPushTagMode>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="RESET_MODE" value="MIXED" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -71,7 +73,7 @@
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.dao.utils.*" />
+          <option name="PATTERN" value="com.vcampus.dao.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -83,65 +85,65 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ClassTable.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="ExamDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.dao.utils.*" />
+          <option name="PATTERN" value="com.vcampus.dao.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="com.vcampus.dao.utils" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.utils.ClassTable" />
+      <option name="PACKAGE_NAME" value="com.vcampus.dao" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.ExamDao" />
       <option name="METHOD_NAME" value="test" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="StudentDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="LibraryDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.dao.utils.*" />
+          <option name="PATTERN" value="com.vcampus.dao.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="com.vcampus.dao" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.StudentDao" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.LibraryDao" />
       <option name="METHOD_NAME" value="test" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="TeacherDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="StudentDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.dao.utils.*" />
+          <option name="PATTERN" value="com.vcampus.dao.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="com.vcampus.dao" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.TeacherDao" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.StudentDao" />
       <option name="METHOD_NAME" value="test" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="TimeTest.TimeTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="TeacherDao.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Vcampus" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.vcampus.test.*" />
+          <option name="PATTERN" value="com.vcampus.dao.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="com.vcampus.test" />
-      <option name="MAIN_CLASS_NAME" value="com.vcampus.test.TimeTest" />
-      <option name="METHOD_NAME" value="TimeTest" />
+      <option name="PACKAGE_NAME" value="com.vcampus.dao" />
+      <option name="MAIN_CLASS_NAME" value="com.vcampus.dao.TeacherDao" />
+      <option name="METHOD_NAME" value="test" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
@@ -149,11 +151,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.ClassTable.test" />
-        <item itemvalue="JUnit.TimeTest.TimeTest" />
         <item itemvalue="JUnit.BaseDao.test" />
         <item itemvalue="JUnit.TeacherDao.test" />
         <item itemvalue="JUnit.StudentDao.test" />
+        <item itemvalue="JUnit.ExamDao.test" />
+        <item itemvalue="JUnit.LibraryDao.test" />
       </list>
     </recent_temporary>
   </component>
@@ -188,15 +190,6 @@
       <workItem from="1660815934556" duration="2473000" />
       <workItem from="1660831786373" duration="1983000" />
       <workItem from="1660888580099" duration="3413000" />
-      <workItem from="1660918724497" duration="1503000" />
-      <workItem from="1660922180929" duration="80000" />
-      <workItem from="1660969405563" duration="1904000" />
-      <workItem from="1660975764803" duration="1456000" />
-      <workItem from="1660977503920" duration="596000" />
-      <workItem from="1660991092243" duration="1569000" />
-      <workItem from="1660993852382" duration="3050000" />
-      <workItem from="1661001183994" duration="134000" />
-      <workItem from="1661001398741" duration="1945000" />
     </task>
     <task id="LOCAL-00001" summary="初步写了登录注册">
       <created>1660298515554</created>
@@ -296,28 +289,7 @@
       <option name="project" value="LOCAL" />
       <updated>1660898810557</updated>
     </task>
-    <task id="LOCAL-00015" summary="继续完善了一些类">
-      <created>1660902650513</created>
-      <option name="number" value="00015" />
-      <option name="presentableId" value="LOCAL-00015" />
-      <option name="project" value="LOCAL" />
-      <updated>1660902650513</updated>
-    </task>
-    <task id="LOCAL-00016" summary="增加了选课判断函数">
-      <created>1660903186114</created>
-      <option name="number" value="00016" />
-      <option name="presentableId" value="LOCAL-00016" />
-      <option name="project" value="LOCAL" />
-      <updated>1660903186114</updated>
-    </task>
-    <task id="LOCAL-00017" summary="出bug了，测试下">
-      <created>1660919678034</created>
-      <option name="number" value="00017" />
-      <option name="presentableId" value="LOCAL-00017" />
-      <option name="project" value="LOCAL" />
-      <updated>1660919678034</updated>
-    </task>
-    <option name="localTasksCounter" value="18" />
+    <option name="localTasksCounter" value="15" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -331,38 +303,8 @@
             <State />
           </value>
         </entry>
-        <entry key="c229b710-18e0-4633-9ddc-e3541ee754eb">
-          <value>
-            <State>
-              <option name="SHOW_ONLY_AFFECTED_CHANGES" value="true" />
-              <option name="FILTERS">
-                <map>
-                  <entry key="branch">
-                    <value>
-                      <list>
-                        <option value="HEAD" />
-                      </list>
-                    </value>
-                  </entry>
-                  <entry key="roots">
-                    <value>
-                      <list>
-                        <option value="$PROJECT_DIR$" />
-                      </list>
-                    </value>
-                  </entry>
-                </map>
-              </option>
-            </State>
-          </value>
-        </entry>
       </map>
     </option>
-    <option name="OPEN_GENERIC_TABS">
-      <map>
-        <entry key="c229b710-18e0-4633-9ddc-e3541ee754eb" value="TOOL_WINDOW" />
-      </map>
-    </option>
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
@@ -380,10 +322,7 @@
     <MESSAGE value="添加了exam类，初步写了examDao层" />
     <MESSAGE value="增强了student，加入了民族信息；同时推进了部分examDao层" />
     <MESSAGE value="baseDao增加了一些公共函数" />
-    <MESSAGE value="继续完善了一些类" />
-    <MESSAGE value="增加了选课判断函数" />
-    <MESSAGE value="出bug了，测试下" />
-    <option name="LAST_COMMIT_MESSAGE" value="出bug了，测试下" />
+    <option name="LAST_COMMIT_MESSAGE" value="baseDao增加了一些公共函数" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: src/com/vcampus/server/controller/StudentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vcampus.server.controller;\r\n\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.vcampus.net.Message;\r\nimport com.vcampus.pojo.Student;\r\nimport com.vcampus.server.service.StudentService;\r\nimport com.google.gson.*;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class StudentController implements Controller {\r\n\r\n    @Override\r\n    public Message check(Message msg){\r\n        StudentService service = new StudentService();\r\n        Gson gson = new Gson();\r\n        switch (msg.getOperation()) {\r\n            case \"post\": {\r\n                //添加学生信息\r\n                //只有在用户管理中存在对应ID在可以添加\r\n                //如果学籍信息中已存在对应ID，则视为修改\r\n                Student student = gson.fromJson(msg.getData(), Student.class);\r\n                if (service.addStudent(student)) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            }\r\n            case \"get\": {//显示所有学生信息\r\n                HashMap<String, Object> map2 = new HashMap<>();\r\n                map2.put(\"res\", service.viewAllStudents());\r\n                return new Message(\"200\", gson.toJson(map2));\r\n            }\r\n            case \"getone\": {//显示某符合某些指标的学生，用或来连接 如：“name:于济源” “属性”+“:”+“数据”\r\n                String data = msg.getData();\r\n                Map<String, String> map = gson.fromJson(data, new TypeToken<HashMap<String, String>>() {}.getType());\r\n                HashMap<String, Object> map3 = new HashMap<>();\r\n                Set<Student> studentSet = new HashSet<>();\r\n                for (Map.Entry<String, String> entry : map.entrySet()) {\r\n                    studentSet.addAll(service.viewSpecificStudents(entry.getKey(), entry.getValue()));\r\n                }\r\n                map3.put(\"res\", studentSet);\r\n                return new Message(\"200\", gson.toJson(map3));\r\n            }\r\n            case \"delete\"://输入学生ID，删除对应学生\r\n                if(service.deleteStudent(msg.getData())) return new Message(\"200\", \"{res: 'OK'}\");\r\n                else return new Message(\"200\", \"{res: 'NO'}\");\r\n            default:\r\n                return new Message(\"404\", \"{res: 'Wrong Request!'}\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/vcampus/server/controller/StudentController.java b/src/com/vcampus/server/controller/StudentController.java
--- a/src/com/vcampus/server/controller/StudentController.java	(revision 8cb461627fa7f8c3728da9a42775e6d68499c9da)
+++ b/src/com/vcampus/server/controller/StudentController.java	(date 1661054682337)
@@ -26,12 +26,14 @@
                 if (service.addStudent(student)) return new Message("200", "{res: 'OK'}");
                 else return new Message("200", "{res: 'NO'}");
             }
-            case "get": {//显示所有学生信息
+            case "get": {
+                //显示所有学生信息
                 HashMap<String, Object> map2 = new HashMap<>();
                 map2.put("res", service.viewAllStudents());
                 return new Message("200", gson.toJson(map2));
             }
-            case "getone": {//显示某符合某些指标的学生，用或来连接 如：“name:于济源” “属性”+“:”+“数据”
+            case "getone": {
+                //显示某符合某些指标的学生，用或来连接 如：“name:于济源” “属性”+“:”+“数据”
                 String data = msg.getData();
                 Map<String, String> map = gson.fromJson(data, new TypeToken<HashMap<String, String>>() {}.getType());
                 HashMap<String, Object> map3 = new HashMap<>();
